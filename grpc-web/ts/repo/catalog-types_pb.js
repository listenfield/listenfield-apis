/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var repo_common$types_pb = require('../repo/common-types_pb.js');
goog.exportSymbol('proto.listenfield.repo.catalog.Company', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.Company.Data', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.ContactInfo', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.ContactInfo.ContactLine', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.Value', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.ContactInfo.Data', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.Crop', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.Crop.Data', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.CropZone', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.CropZone.Data', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.Farm', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.Farm.Data', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.Field', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.Field.Data', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.FieldBoundary', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.FieldBoundary.Data', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.Grower', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.Grower.Data', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.Person', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.Person.Data', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.PersonRole', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.PersonRole.Data', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum', null, global);
goog.exportSymbol('proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.Value', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.ContactInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.ContactInfo.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.ContactInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.ContactInfo.displayName = 'proto.listenfield.repo.catalog.ContactInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.ContactInfo.repeatedFields_ = [300];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.ContactInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.ContactInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.ContactInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.ContactInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    ids: (f = msg.getIds()) && repo_common$types_pb.CompoundIdentifier.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.listenfield.repo.catalog.ContactInfo.Data.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextitemsList: jspb.Message.toObjectList(msg.getContextitemsList(),
    repo_common$types_pb.ContextItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.ContactInfo}
 */
proto.listenfield.repo.catalog.ContactInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.ContactInfo;
  return proto.listenfield.repo.catalog.ContactInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.ContactInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.ContactInfo}
 */
proto.listenfield.repo.catalog.ContactInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_common$types_pb.CompoundIdentifier;
      reader.readMessage(value,repo_common$types_pb.CompoundIdentifier.deserializeBinaryFromReader);
      msg.setIds(value);
      break;
    case 2:
      var value = new proto.listenfield.repo.catalog.ContactInfo.Data;
      reader.readMessage(value,proto.listenfield.repo.catalog.ContactInfo.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 300:
      var value = new repo_common$types_pb.ContextItem;
      reader.readMessage(value,repo_common$types_pb.ContextItem.deserializeBinaryFromReader);
      msg.addContextitems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.ContactInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.ContactInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.ContactInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.ContactInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_common$types_pb.CompoundIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.listenfield.repo.catalog.ContactInfo.Data.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextitemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      300,
      f,
      repo_common$types_pb.ContextItem.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.displayName = 'proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum}
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum;
  return proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum}
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.Value = {
  FIXEDPHONE: 0,
  MOBILEPHONE: 1,
  FAX: 2,
  EMAIL: 3,
  INSTANTMESSAGING: 100,
  URL: 101,
  SOCIALPROFILE: 102
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLine = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.catalog.ContactInfo.ContactLine, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.ContactInfo.ContactLine.displayName = 'proto.listenfield.repo.catalog.ContactInfo.ContactLine';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLine.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.ContactInfo.ContactLine.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.ContactInfo.ContactLine} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLine.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    annotation: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.ContactInfo.ContactLine}
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLine.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.ContactInfo.ContactLine;
  return proto.listenfield.repo.catalog.ContactInfo.ContactLine.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.ContactInfo.ContactLine} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.ContactInfo.ContactLine}
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLine.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {!proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.Value} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnnotation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLine.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.ContactInfo.ContactLine.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.ContactInfo.ContactLine} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLine.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAnnotation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLine.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.ContactInfo.ContactLine.prototype.setIdentifier = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional ContactLineTypeEnum.Value type = 2;
 * @return {!proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.Value}
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLine.prototype.getType = function() {
  return /** @type {!proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.Value} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.listenfield.repo.catalog.ContactInfo.ContactLineTypeEnum.Value} value */
proto.listenfield.repo.catalog.ContactInfo.ContactLine.prototype.setType = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string annotation = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.ContactInfo.ContactLine.prototype.getAnnotation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.ContactInfo.ContactLine.prototype.setAnnotation = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.ContactInfo.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.ContactInfo.Data.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.ContactInfo.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.ContactInfo.Data.displayName = 'proto.listenfield.repo.catalog.ContactInfo.Data';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.ContactInfo.Data.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.ContactInfo.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.ContactInfo.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.ContactInfo.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressline1: jspb.Message.getFieldWithDefault(msg, 1, ""),
    addressline2: jspb.Message.getFieldWithDefault(msg, 2, ""),
    poboxnumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    postalcode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    city: jspb.Message.getFieldWithDefault(msg, 5, ""),
    stateorprovince: jspb.Message.getFieldWithDefault(msg, 6, ""),
    country: jspb.Message.getFieldWithDefault(msg, 7, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    contactlinesList: jspb.Message.toObjectList(msg.getContactlinesList(),
    proto.listenfield.repo.catalog.ContactInfo.ContactLine.toObject, includeInstance),
    location: (f = msg.getLocation()) && repo_common$types_pb.Location.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.ContactInfo.Data}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.ContactInfo.Data;
  return proto.listenfield.repo.catalog.ContactInfo.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.ContactInfo.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.ContactInfo.Data}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressline1(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressline2(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoboxnumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalcode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStateorprovince(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 9:
      var value = new proto.listenfield.repo.catalog.ContactInfo.ContactLine;
      reader.readMessage(value,proto.listenfield.repo.catalog.ContactInfo.ContactLine.deserializeBinaryFromReader);
      msg.addContactlines(value);
      break;
    case 10:
      var value = new repo_common$types_pb.Location;
      reader.readMessage(value,repo_common$types_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.ContactInfo.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.ContactInfo.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.ContactInfo.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressline1();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddressline2();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPoboxnumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPostalcode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStateorprovince();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getContactlinesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.listenfield.repo.catalog.ContactInfo.ContactLine.serializeBinaryToWriter
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      repo_common$types_pb.Location.serializeBinaryToWriter
    );
  }
};


/**
 * optional string addressLine1 = 1;
 * @return {string}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.getAddressline1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.setAddressline1 = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string addressLine2 = 2;
 * @return {string}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.getAddressline2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.setAddressline2 = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string poBoxNumber = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.getPoboxnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.setPoboxnumber = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string postalCode = 4;
 * @return {string}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.getPostalcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.setPostalcode = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string city = 5;
 * @return {string}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.setCity = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string stateOrProvince = 6;
 * @return {string}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.getStateorprovince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.setStateorprovince = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string country = 7;
 * @return {string}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.setCountry = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string countryCode = 8;
 * @return {string}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.setCountrycode = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * repeated ContactLine contactLines = 9;
 * @return {!Array.<!proto.listenfield.repo.catalog.ContactInfo.ContactLine>}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.getContactlinesList = function() {
  return /** @type{!Array.<!proto.listenfield.repo.catalog.ContactInfo.ContactLine>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.listenfield.repo.catalog.ContactInfo.ContactLine, 9));
};


/** @param {!Array.<!proto.listenfield.repo.catalog.ContactInfo.ContactLine>} value */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.setContactlinesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.listenfield.repo.catalog.ContactInfo.ContactLine=} opt_value
 * @param {number=} opt_index
 * @return {!proto.listenfield.repo.catalog.ContactInfo.ContactLine}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.addContactlines = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.listenfield.repo.catalog.ContactInfo.ContactLine, opt_index);
};


proto.listenfield.repo.catalog.ContactInfo.Data.prototype.clearContactlinesList = function() {
  this.setContactlinesList([]);
};


/**
 * optional listenfield.repo.common.Location location = 10;
 * @return {?proto.listenfield.repo.common.Location}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.getLocation = function() {
  return /** @type{?proto.listenfield.repo.common.Location} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.Location, 10));
};


/** @param {?proto.listenfield.repo.common.Location|undefined} value */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.setLocation = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.listenfield.repo.catalog.ContactInfo.Data.prototype.clearLocation = function() {
  this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.ContactInfo.Data.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional listenfield.repo.common.CompoundIdentifier ids = 1;
 * @return {?proto.listenfield.repo.common.CompoundIdentifier}
 */
proto.listenfield.repo.catalog.ContactInfo.prototype.getIds = function() {
  return /** @type{?proto.listenfield.repo.common.CompoundIdentifier} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.CompoundIdentifier, 1));
};


/** @param {?proto.listenfield.repo.common.CompoundIdentifier|undefined} value */
proto.listenfield.repo.catalog.ContactInfo.prototype.setIds = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.catalog.ContactInfo.prototype.clearIds = function() {
  this.setIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.ContactInfo.prototype.hasIds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data data = 2;
 * @return {?proto.listenfield.repo.catalog.ContactInfo.Data}
 */
proto.listenfield.repo.catalog.ContactInfo.prototype.getData = function() {
  return /** @type{?proto.listenfield.repo.catalog.ContactInfo.Data} */ (
    jspb.Message.getWrapperField(this, proto.listenfield.repo.catalog.ContactInfo.Data, 2));
};


/** @param {?proto.listenfield.repo.catalog.ContactInfo.Data|undefined} value */
proto.listenfield.repo.catalog.ContactInfo.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.listenfield.repo.catalog.ContactInfo.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.ContactInfo.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.ContactInfo.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.ContactInfo.prototype.setOwner = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated listenfield.repo.common.ContextItem contextItems = 300;
 * @return {!Array.<!proto.listenfield.repo.common.ContextItem>}
 */
proto.listenfield.repo.catalog.ContactInfo.prototype.getContextitemsList = function() {
  return /** @type{!Array.<!proto.listenfield.repo.common.ContextItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, repo_common$types_pb.ContextItem, 300));
};


/** @param {!Array.<!proto.listenfield.repo.common.ContextItem>} value */
proto.listenfield.repo.catalog.ContactInfo.prototype.setContextitemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 300, value);
};


/**
 * @param {!proto.listenfield.repo.common.ContextItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.listenfield.repo.common.ContextItem}
 */
proto.listenfield.repo.catalog.ContactInfo.prototype.addContextitems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 300, opt_value, proto.listenfield.repo.common.ContextItem, opt_index);
};


proto.listenfield.repo.catalog.ContactInfo.prototype.clearContextitemsList = function() {
  this.setContextitemsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.Grower = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.Grower.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.Grower, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.Grower.displayName = 'proto.listenfield.repo.catalog.Grower';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.Grower.repeatedFields_ = [300];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.Grower.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.Grower.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.Grower} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Grower.toObject = function(includeInstance, msg) {
  var f, obj = {
    ids: (f = msg.getIds()) && repo_common$types_pb.CompoundIdentifier.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.listenfield.repo.catalog.Grower.Data.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextitemsList: jspb.Message.toObjectList(msg.getContextitemsList(),
    repo_common$types_pb.ContextItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.Grower}
 */
proto.listenfield.repo.catalog.Grower.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.Grower;
  return proto.listenfield.repo.catalog.Grower.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.Grower} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.Grower}
 */
proto.listenfield.repo.catalog.Grower.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_common$types_pb.CompoundIdentifier;
      reader.readMessage(value,repo_common$types_pb.CompoundIdentifier.deserializeBinaryFromReader);
      msg.setIds(value);
      break;
    case 2:
      var value = new proto.listenfield.repo.catalog.Grower.Data;
      reader.readMessage(value,proto.listenfield.repo.catalog.Grower.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 300:
      var value = new repo_common$types_pb.ContextItem;
      reader.readMessage(value,repo_common$types_pb.ContextItem.deserializeBinaryFromReader);
      msg.addContextitems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.Grower.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.Grower.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.Grower} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Grower.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_common$types_pb.CompoundIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.listenfield.repo.catalog.Grower.Data.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextitemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      300,
      f,
      repo_common$types_pb.ContextItem.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.Grower.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.catalog.Grower.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.Grower.Data.displayName = 'proto.listenfield.repo.catalog.Grower.Data';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.Grower.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.Grower.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.Grower.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Grower.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contactinfoid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.Grower.Data}
 */
proto.listenfield.repo.catalog.Grower.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.Grower.Data;
  return proto.listenfield.repo.catalog.Grower.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.Grower.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.Grower.Data}
 */
proto.listenfield.repo.catalog.Grower.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactinfoid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.Grower.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.Grower.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.Grower.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Grower.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContactinfoid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.listenfield.repo.catalog.Grower.Data.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Grower.Data.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string contactInfoId = 2;
 * @return {string}
 */
proto.listenfield.repo.catalog.Grower.Data.prototype.getContactinfoid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Grower.Data.prototype.setContactinfoid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional listenfield.repo.common.CompoundIdentifier ids = 1;
 * @return {?proto.listenfield.repo.common.CompoundIdentifier}
 */
proto.listenfield.repo.catalog.Grower.prototype.getIds = function() {
  return /** @type{?proto.listenfield.repo.common.CompoundIdentifier} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.CompoundIdentifier, 1));
};


/** @param {?proto.listenfield.repo.common.CompoundIdentifier|undefined} value */
proto.listenfield.repo.catalog.Grower.prototype.setIds = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.catalog.Grower.prototype.clearIds = function() {
  this.setIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Grower.prototype.hasIds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data data = 2;
 * @return {?proto.listenfield.repo.catalog.Grower.Data}
 */
proto.listenfield.repo.catalog.Grower.prototype.getData = function() {
  return /** @type{?proto.listenfield.repo.catalog.Grower.Data} */ (
    jspb.Message.getWrapperField(this, proto.listenfield.repo.catalog.Grower.Data, 2));
};


/** @param {?proto.listenfield.repo.catalog.Grower.Data|undefined} value */
proto.listenfield.repo.catalog.Grower.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.listenfield.repo.catalog.Grower.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Grower.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.Grower.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Grower.prototype.setOwner = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated listenfield.repo.common.ContextItem contextItems = 300;
 * @return {!Array.<!proto.listenfield.repo.common.ContextItem>}
 */
proto.listenfield.repo.catalog.Grower.prototype.getContextitemsList = function() {
  return /** @type{!Array.<!proto.listenfield.repo.common.ContextItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, repo_common$types_pb.ContextItem, 300));
};


/** @param {!Array.<!proto.listenfield.repo.common.ContextItem>} value */
proto.listenfield.repo.catalog.Grower.prototype.setContextitemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 300, value);
};


/**
 * @param {!proto.listenfield.repo.common.ContextItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.listenfield.repo.common.ContextItem}
 */
proto.listenfield.repo.catalog.Grower.prototype.addContextitems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 300, opt_value, proto.listenfield.repo.common.ContextItem, opt_index);
};


proto.listenfield.repo.catalog.Grower.prototype.clearContextitemsList = function() {
  this.setContextitemsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.Farm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.Farm.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.Farm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.Farm.displayName = 'proto.listenfield.repo.catalog.Farm';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.Farm.repeatedFields_ = [300];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.Farm.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.Farm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.Farm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Farm.toObject = function(includeInstance, msg) {
  var f, obj = {
    ids: (f = msg.getIds()) && repo_common$types_pb.CompoundIdentifier.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.listenfield.repo.catalog.Farm.Data.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextitemsList: jspb.Message.toObjectList(msg.getContextitemsList(),
    repo_common$types_pb.ContextItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.Farm}
 */
proto.listenfield.repo.catalog.Farm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.Farm;
  return proto.listenfield.repo.catalog.Farm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.Farm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.Farm}
 */
proto.listenfield.repo.catalog.Farm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_common$types_pb.CompoundIdentifier;
      reader.readMessage(value,repo_common$types_pb.CompoundIdentifier.deserializeBinaryFromReader);
      msg.setIds(value);
      break;
    case 2:
      var value = new proto.listenfield.repo.catalog.Farm.Data;
      reader.readMessage(value,proto.listenfield.repo.catalog.Farm.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 300:
      var value = new repo_common$types_pb.ContextItem;
      reader.readMessage(value,repo_common$types_pb.ContextItem.deserializeBinaryFromReader);
      msg.addContextitems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.Farm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.Farm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.Farm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Farm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_common$types_pb.CompoundIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.listenfield.repo.catalog.Farm.Data.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextitemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      300,
      f,
      repo_common$types_pb.ContextItem.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.Farm.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.catalog.Farm.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.Farm.Data.displayName = 'proto.listenfield.repo.catalog.Farm.Data';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.Farm.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.Farm.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.Farm.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Farm.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    growerid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contactinfoid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.Farm.Data}
 */
proto.listenfield.repo.catalog.Farm.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.Farm.Data;
  return proto.listenfield.repo.catalog.Farm.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.Farm.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.Farm.Data}
 */
proto.listenfield.repo.catalog.Farm.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGrowerid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactinfoid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.Farm.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.Farm.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.Farm.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Farm.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGrowerid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContactinfoid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.listenfield.repo.catalog.Farm.Data.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Farm.Data.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string growerId = 2;
 * @return {string}
 */
proto.listenfield.repo.catalog.Farm.Data.prototype.getGrowerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Farm.Data.prototype.setGrowerid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string contactInfoId = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.Farm.Data.prototype.getContactinfoid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Farm.Data.prototype.setContactinfoid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional listenfield.repo.common.CompoundIdentifier ids = 1;
 * @return {?proto.listenfield.repo.common.CompoundIdentifier}
 */
proto.listenfield.repo.catalog.Farm.prototype.getIds = function() {
  return /** @type{?proto.listenfield.repo.common.CompoundIdentifier} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.CompoundIdentifier, 1));
};


/** @param {?proto.listenfield.repo.common.CompoundIdentifier|undefined} value */
proto.listenfield.repo.catalog.Farm.prototype.setIds = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.catalog.Farm.prototype.clearIds = function() {
  this.setIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Farm.prototype.hasIds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data data = 2;
 * @return {?proto.listenfield.repo.catalog.Farm.Data}
 */
proto.listenfield.repo.catalog.Farm.prototype.getData = function() {
  return /** @type{?proto.listenfield.repo.catalog.Farm.Data} */ (
    jspb.Message.getWrapperField(this, proto.listenfield.repo.catalog.Farm.Data, 2));
};


/** @param {?proto.listenfield.repo.catalog.Farm.Data|undefined} value */
proto.listenfield.repo.catalog.Farm.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.listenfield.repo.catalog.Farm.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Farm.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.Farm.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Farm.prototype.setOwner = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated listenfield.repo.common.ContextItem contextItems = 300;
 * @return {!Array.<!proto.listenfield.repo.common.ContextItem>}
 */
proto.listenfield.repo.catalog.Farm.prototype.getContextitemsList = function() {
  return /** @type{!Array.<!proto.listenfield.repo.common.ContextItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, repo_common$types_pb.ContextItem, 300));
};


/** @param {!Array.<!proto.listenfield.repo.common.ContextItem>} value */
proto.listenfield.repo.catalog.Farm.prototype.setContextitemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 300, value);
};


/**
 * @param {!proto.listenfield.repo.common.ContextItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.listenfield.repo.common.ContextItem}
 */
proto.listenfield.repo.catalog.Farm.prototype.addContextitems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 300, opt_value, proto.listenfield.repo.common.ContextItem, opt_index);
};


proto.listenfield.repo.catalog.Farm.prototype.clearContextitemsList = function() {
  this.setContextitemsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.FieldBoundary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.FieldBoundary.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.FieldBoundary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.FieldBoundary.displayName = 'proto.listenfield.repo.catalog.FieldBoundary';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.FieldBoundary.repeatedFields_ = [300];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.FieldBoundary.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.FieldBoundary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.FieldBoundary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.FieldBoundary.toObject = function(includeInstance, msg) {
  var f, obj = {
    ids: (f = msg.getIds()) && repo_common$types_pb.CompoundIdentifier.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.listenfield.repo.catalog.FieldBoundary.Data.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextitemsList: jspb.Message.toObjectList(msg.getContextitemsList(),
    repo_common$types_pb.ContextItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.FieldBoundary}
 */
proto.listenfield.repo.catalog.FieldBoundary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.FieldBoundary;
  return proto.listenfield.repo.catalog.FieldBoundary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.FieldBoundary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.FieldBoundary}
 */
proto.listenfield.repo.catalog.FieldBoundary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_common$types_pb.CompoundIdentifier;
      reader.readMessage(value,repo_common$types_pb.CompoundIdentifier.deserializeBinaryFromReader);
      msg.setIds(value);
      break;
    case 2:
      var value = new proto.listenfield.repo.catalog.FieldBoundary.Data;
      reader.readMessage(value,proto.listenfield.repo.catalog.FieldBoundary.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 300:
      var value = new repo_common$types_pb.ContextItem;
      reader.readMessage(value,repo_common$types_pb.ContextItem.deserializeBinaryFromReader);
      msg.addContextitems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.FieldBoundary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.FieldBoundary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.FieldBoundary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.FieldBoundary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_common$types_pb.CompoundIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.listenfield.repo.catalog.FieldBoundary.Data.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextitemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      300,
      f,
      repo_common$types_pb.ContextItem.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.displayName = 'proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    shapeidref: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ispassable: jspb.Message.getFieldWithDefault(msg, 2, false),
    description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute}
 */
proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute;
  return proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute}
 */
proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setShapeidref(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspassable(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShapeidref();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getIspassable();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint32 shapeIdRef = 1;
 * @return {number}
 */
proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.prototype.getShapeidref = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.prototype.setShapeidref = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool isPassable = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.prototype.getIspassable = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.prototype.setIspassable = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.displayName = 'proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    spatialdata: (f = msg.getSpatialdata()) && repo_common$types_pb.MultiPolygon.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland}
 */
proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland;
  return proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland}
 */
proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = new repo_common$types_pb.MultiPolygon;
      reader.readMessage(value,repo_common$types_pb.MultiPolygon.deserializeBinaryFromReader);
      msg.setSpatialdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpatialdata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      repo_common$types_pb.MultiPolygon.serializeBinaryToWriter
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional listenfield.repo.common.MultiPolygon spatialData = 2;
 * @return {?proto.listenfield.repo.common.MultiPolygon}
 */
proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.prototype.getSpatialdata = function() {
  return /** @type{?proto.listenfield.repo.common.MultiPolygon} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.MultiPolygon, 2));
};


/** @param {?proto.listenfield.repo.common.MultiPolygon|undefined} value */
proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.prototype.setSpatialdata = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.prototype.clearSpatialdata = function() {
  this.setSpatialdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.prototype.hasSpatialdata = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.displayName = 'proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: (f = msg.getValue()) && repo_common$types_pb.NumericRepresentationValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland}
 */
proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland;
  return proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland}
 */
proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = new repo_common$types_pb.NumericRepresentationValue;
      reader.readMessage(value,repo_common$types_pb.NumericRepresentationValue.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      repo_common$types_pb.NumericRepresentationValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional listenfield.repo.common.NumericRepresentationValue value = 2;
 * @return {?proto.listenfield.repo.common.NumericRepresentationValue}
 */
proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.prototype.getValue = function() {
  return /** @type{?proto.listenfield.repo.common.NumericRepresentationValue} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.NumericRepresentationValue, 2));
};


/** @param {?proto.listenfield.repo.common.NumericRepresentationValue|undefined} value */
proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.FieldBoundary.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.FieldBoundary.Data.repeatedFields_, proto.listenfield.repo.catalog.FieldBoundary.Data.oneofGroups_);
};
goog.inherits(proto.listenfield.repo.catalog.FieldBoundary.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.FieldBoundary.Data.displayName = 'proto.listenfield.repo.catalog.FieldBoundary.Data';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.repeatedFields_ = [4,8];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.oneofGroups_ = [[101,102]];

/**
 * @enum {number}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.HeadlandCase = {
  HEADLAND_NOT_SET: 0,
  DRIVENHEADLAND: 101,
  CONSTANTOFFSETHEADLAND: 102
};

/**
 * @return {proto.listenfield.repo.catalog.FieldBoundary.Data.HeadlandCase}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.getHeadlandCase = function() {
  return /** @type {proto.listenfield.repo.catalog.FieldBoundary.Data.HeadlandCase} */(jspb.Message.computeOneofCase(this, proto.listenfield.repo.catalog.FieldBoundary.Data.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.FieldBoundary.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.FieldBoundary.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    spatialdata: (f = msg.getSpatialdata()) && repo_common$types_pb.MultiPolygon.toObject(includeInstance, f),
    timescopeidsList: jspb.Message.getRepeatedField(msg, 4),
    drivenheadland: (f = msg.getDrivenheadland()) && proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.toObject(includeInstance, f),
    constantoffsetheadland: (f = msg.getConstantoffsetheadland()) && proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.toObject(includeInstance, f),
    boundarysource: (f = msg.getBoundarysource()) && repo_common$types_pb.GpsSource.toObject(includeInstance, f),
    originalepsgcode: jspb.Message.getFieldWithDefault(msg, 7, ""),
    interiorboundaryattributesList: jspb.Message.toObjectList(msg.getInteriorboundaryattributesList(),
    proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.FieldBoundary.Data}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.FieldBoundary.Data;
  return proto.listenfield.repo.catalog.FieldBoundary.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.FieldBoundary.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.FieldBoundary.Data}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldid(value);
      break;
    case 3:
      var value = new repo_common$types_pb.MultiPolygon;
      reader.readMessage(value,repo_common$types_pb.MultiPolygon.deserializeBinaryFromReader);
      msg.setSpatialdata(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addTimescopeids(value);
      break;
    case 101:
      var value = new proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland;
      reader.readMessage(value,proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.deserializeBinaryFromReader);
      msg.setDrivenheadland(value);
      break;
    case 102:
      var value = new proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland;
      reader.readMessage(value,proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.deserializeBinaryFromReader);
      msg.setConstantoffsetheadland(value);
      break;
    case 6:
      var value = new repo_common$types_pb.GpsSource;
      reader.readMessage(value,repo_common$types_pb.GpsSource.deserializeBinaryFromReader);
      msg.setBoundarysource(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalepsgcode(value);
      break;
    case 8:
      var value = new proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute;
      reader.readMessage(value,proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.deserializeBinaryFromReader);
      msg.addInteriorboundaryattributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.FieldBoundary.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.FieldBoundary.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSpatialdata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      repo_common$types_pb.MultiPolygon.serializeBinaryToWriter
    );
  }
  f = message.getTimescopeidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getDrivenheadland();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland.serializeBinaryToWriter
    );
  }
  f = message.getConstantoffsetheadland();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland.serializeBinaryToWriter
    );
  }
  f = message.getBoundarysource();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      repo_common$types_pb.GpsSource.serializeBinaryToWriter
    );
  }
  f = message.getOriginalepsgcode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getInteriorboundaryattributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute.serializeBinaryToWriter
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string fieldId = 2;
 * @return {string}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.getFieldid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.setFieldid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional listenfield.repo.common.MultiPolygon spatialData = 3;
 * @return {?proto.listenfield.repo.common.MultiPolygon}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.getSpatialdata = function() {
  return /** @type{?proto.listenfield.repo.common.MultiPolygon} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.MultiPolygon, 3));
};


/** @param {?proto.listenfield.repo.common.MultiPolygon|undefined} value */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.setSpatialdata = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.clearSpatialdata = function() {
  this.setSpatialdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.hasSpatialdata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string timeScopeIds = 4;
 * @return {!Array.<string>}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.getTimescopeidsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array.<string>} value */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.setTimescopeidsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.addTimescopeids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.clearTimescopeidsList = function() {
  this.setTimescopeidsList([]);
};


/**
 * optional DrivenHeadland drivenHeadland = 101;
 * @return {?proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.getDrivenheadland = function() {
  return /** @type{?proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland} */ (
    jspb.Message.getWrapperField(this, proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland, 101));
};


/** @param {?proto.listenfield.repo.catalog.FieldBoundary.DrivenHeadland|undefined} value */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.setDrivenheadland = function(value) {
  jspb.Message.setOneofWrapperField(this, 101, proto.listenfield.repo.catalog.FieldBoundary.Data.oneofGroups_[0], value);
};


proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.clearDrivenheadland = function() {
  this.setDrivenheadland(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.hasDrivenheadland = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional ConstantOffsetHeadland constantOffsetHeadland = 102;
 * @return {?proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.getConstantoffsetheadland = function() {
  return /** @type{?proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland} */ (
    jspb.Message.getWrapperField(this, proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland, 102));
};


/** @param {?proto.listenfield.repo.catalog.FieldBoundary.ConstantOffsetHeadland|undefined} value */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.setConstantoffsetheadland = function(value) {
  jspb.Message.setOneofWrapperField(this, 102, proto.listenfield.repo.catalog.FieldBoundary.Data.oneofGroups_[0], value);
};


proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.clearConstantoffsetheadland = function() {
  this.setConstantoffsetheadland(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.hasConstantoffsetheadland = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional listenfield.repo.common.GpsSource boundarySource = 6;
 * @return {?proto.listenfield.repo.common.GpsSource}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.getBoundarysource = function() {
  return /** @type{?proto.listenfield.repo.common.GpsSource} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.GpsSource, 6));
};


/** @param {?proto.listenfield.repo.common.GpsSource|undefined} value */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.setBoundarysource = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.clearBoundarysource = function() {
  this.setBoundarysource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.hasBoundarysource = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string originalEpsgCode = 7;
 * @return {string}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.getOriginalepsgcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.setOriginalepsgcode = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * repeated InteriorBoundaryAttribute interiorBoundaryAttributes = 8;
 * @return {!Array.<!proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute>}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.getInteriorboundaryattributesList = function() {
  return /** @type{!Array.<!proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute, 8));
};


/** @param {!Array.<!proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute>} value */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.setInteriorboundaryattributesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute}
 */
proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.addInteriorboundaryattributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.listenfield.repo.catalog.FieldBoundary.InteriorBoundaryAttribute, opt_index);
};


proto.listenfield.repo.catalog.FieldBoundary.Data.prototype.clearInteriorboundaryattributesList = function() {
  this.setInteriorboundaryattributesList([]);
};


/**
 * optional listenfield.repo.common.CompoundIdentifier ids = 1;
 * @return {?proto.listenfield.repo.common.CompoundIdentifier}
 */
proto.listenfield.repo.catalog.FieldBoundary.prototype.getIds = function() {
  return /** @type{?proto.listenfield.repo.common.CompoundIdentifier} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.CompoundIdentifier, 1));
};


/** @param {?proto.listenfield.repo.common.CompoundIdentifier|undefined} value */
proto.listenfield.repo.catalog.FieldBoundary.prototype.setIds = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.catalog.FieldBoundary.prototype.clearIds = function() {
  this.setIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.FieldBoundary.prototype.hasIds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data data = 2;
 * @return {?proto.listenfield.repo.catalog.FieldBoundary.Data}
 */
proto.listenfield.repo.catalog.FieldBoundary.prototype.getData = function() {
  return /** @type{?proto.listenfield.repo.catalog.FieldBoundary.Data} */ (
    jspb.Message.getWrapperField(this, proto.listenfield.repo.catalog.FieldBoundary.Data, 2));
};


/** @param {?proto.listenfield.repo.catalog.FieldBoundary.Data|undefined} value */
proto.listenfield.repo.catalog.FieldBoundary.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.listenfield.repo.catalog.FieldBoundary.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.FieldBoundary.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.FieldBoundary.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.FieldBoundary.prototype.setOwner = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated listenfield.repo.common.ContextItem contextItems = 300;
 * @return {!Array.<!proto.listenfield.repo.common.ContextItem>}
 */
proto.listenfield.repo.catalog.FieldBoundary.prototype.getContextitemsList = function() {
  return /** @type{!Array.<!proto.listenfield.repo.common.ContextItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, repo_common$types_pb.ContextItem, 300));
};


/** @param {!Array.<!proto.listenfield.repo.common.ContextItem>} value */
proto.listenfield.repo.catalog.FieldBoundary.prototype.setContextitemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 300, value);
};


/**
 * @param {!proto.listenfield.repo.common.ContextItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.listenfield.repo.common.ContextItem}
 */
proto.listenfield.repo.catalog.FieldBoundary.prototype.addContextitems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 300, opt_value, proto.listenfield.repo.common.ContextItem, opt_index);
};


proto.listenfield.repo.catalog.FieldBoundary.prototype.clearContextitemsList = function() {
  this.setContextitemsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.Field = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.Field.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.Field, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.Field.displayName = 'proto.listenfield.repo.catalog.Field';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.Field.repeatedFields_ = [300];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.Field.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.Field.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.Field} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Field.toObject = function(includeInstance, msg) {
  var f, obj = {
    ids: (f = msg.getIds()) && repo_common$types_pb.CompoundIdentifier.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.listenfield.repo.catalog.Field.Data.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextitemsList: jspb.Message.toObjectList(msg.getContextitemsList(),
    repo_common$types_pb.ContextItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.Field}
 */
proto.listenfield.repo.catalog.Field.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.Field;
  return proto.listenfield.repo.catalog.Field.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.Field} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.Field}
 */
proto.listenfield.repo.catalog.Field.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_common$types_pb.CompoundIdentifier;
      reader.readMessage(value,repo_common$types_pb.CompoundIdentifier.deserializeBinaryFromReader);
      msg.setIds(value);
      break;
    case 2:
      var value = new proto.listenfield.repo.catalog.Field.Data;
      reader.readMessage(value,proto.listenfield.repo.catalog.Field.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 300:
      var value = new repo_common$types_pb.ContextItem;
      reader.readMessage(value,repo_common$types_pb.ContextItem.deserializeBinaryFromReader);
      msg.addContextitems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.Field.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.Field.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.Field} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Field.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_common$types_pb.CompoundIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.listenfield.repo.catalog.Field.Data.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextitemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      300,
      f,
      repo_common$types_pb.ContextItem.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.Field.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.Field.Data.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.Field.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.Field.Data.displayName = 'proto.listenfield.repo.catalog.Field.Data';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.Field.Data.repeatedFields_ = [4,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.Field.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.Field.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Field.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    farmid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    area: (f = msg.getArea()) && repo_common$types_pb.NumericRepresentationValue.toObject(includeInstance, f),
    timescopeidsList: jspb.Message.getRepeatedField(msg, 4),
    activeboundaryid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    slope: (f = msg.getSlope()) && repo_common$types_pb.NumericRepresentationValue.toObject(includeInstance, f),
    aspect: (f = msg.getAspect()) && repo_common$types_pb.NumericRepresentationValue.toObject(includeInstance, f),
    slopelength: (f = msg.getSlopelength()) && repo_common$types_pb.NumericRepresentationValue.toObject(includeInstance, f),
    guidancegroupidsList: jspb.Message.getRepeatedField(msg, 9)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.Field.Data}
 */
proto.listenfield.repo.catalog.Field.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.Field.Data;
  return proto.listenfield.repo.catalog.Field.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.Field.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.Field.Data}
 */
proto.listenfield.repo.catalog.Field.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFarmid(value);
      break;
    case 3:
      var value = new repo_common$types_pb.NumericRepresentationValue;
      reader.readMessage(value,repo_common$types_pb.NumericRepresentationValue.deserializeBinaryFromReader);
      msg.setArea(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addTimescopeids(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setActiveboundaryid(value);
      break;
    case 6:
      var value = new repo_common$types_pb.NumericRepresentationValue;
      reader.readMessage(value,repo_common$types_pb.NumericRepresentationValue.deserializeBinaryFromReader);
      msg.setSlope(value);
      break;
    case 7:
      var value = new repo_common$types_pb.NumericRepresentationValue;
      reader.readMessage(value,repo_common$types_pb.NumericRepresentationValue.deserializeBinaryFromReader);
      msg.setAspect(value);
      break;
    case 8:
      var value = new repo_common$types_pb.NumericRepresentationValue;
      reader.readMessage(value,repo_common$types_pb.NumericRepresentationValue.deserializeBinaryFromReader);
      msg.setSlopelength(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addGuidancegroupids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.Field.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.Field.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Field.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFarmid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArea();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      repo_common$types_pb.NumericRepresentationValue.serializeBinaryToWriter
    );
  }
  f = message.getTimescopeidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getActiveboundaryid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSlope();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      repo_common$types_pb.NumericRepresentationValue.serializeBinaryToWriter
    );
  }
  f = message.getAspect();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      repo_common$types_pb.NumericRepresentationValue.serializeBinaryToWriter
    );
  }
  f = message.getSlopelength();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      repo_common$types_pb.NumericRepresentationValue.serializeBinaryToWriter
    );
  }
  f = message.getGuidancegroupidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Field.Data.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string farmId = 2;
 * @return {string}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.getFarmid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Field.Data.prototype.setFarmid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional listenfield.repo.common.NumericRepresentationValue area = 3;
 * @return {?proto.listenfield.repo.common.NumericRepresentationValue}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.getArea = function() {
  return /** @type{?proto.listenfield.repo.common.NumericRepresentationValue} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.NumericRepresentationValue, 3));
};


/** @param {?proto.listenfield.repo.common.NumericRepresentationValue|undefined} value */
proto.listenfield.repo.catalog.Field.Data.prototype.setArea = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.listenfield.repo.catalog.Field.Data.prototype.clearArea = function() {
  this.setArea(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.hasArea = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string timeScopeIds = 4;
 * @return {!Array.<string>}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.getTimescopeidsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array.<string>} value */
proto.listenfield.repo.catalog.Field.Data.prototype.setTimescopeidsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.listenfield.repo.catalog.Field.Data.prototype.addTimescopeids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.listenfield.repo.catalog.Field.Data.prototype.clearTimescopeidsList = function() {
  this.setTimescopeidsList([]);
};


/**
 * optional string activeBoundaryId = 5;
 * @return {string}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.getActiveboundaryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Field.Data.prototype.setActiveboundaryid = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional listenfield.repo.common.NumericRepresentationValue slope = 6;
 * @return {?proto.listenfield.repo.common.NumericRepresentationValue}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.getSlope = function() {
  return /** @type{?proto.listenfield.repo.common.NumericRepresentationValue} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.NumericRepresentationValue, 6));
};


/** @param {?proto.listenfield.repo.common.NumericRepresentationValue|undefined} value */
proto.listenfield.repo.catalog.Field.Data.prototype.setSlope = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.listenfield.repo.catalog.Field.Data.prototype.clearSlope = function() {
  this.setSlope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.hasSlope = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional listenfield.repo.common.NumericRepresentationValue aspect = 7;
 * @return {?proto.listenfield.repo.common.NumericRepresentationValue}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.getAspect = function() {
  return /** @type{?proto.listenfield.repo.common.NumericRepresentationValue} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.NumericRepresentationValue, 7));
};


/** @param {?proto.listenfield.repo.common.NumericRepresentationValue|undefined} value */
proto.listenfield.repo.catalog.Field.Data.prototype.setAspect = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.listenfield.repo.catalog.Field.Data.prototype.clearAspect = function() {
  this.setAspect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.hasAspect = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional listenfield.repo.common.NumericRepresentationValue slopeLength = 8;
 * @return {?proto.listenfield.repo.common.NumericRepresentationValue}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.getSlopelength = function() {
  return /** @type{?proto.listenfield.repo.common.NumericRepresentationValue} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.NumericRepresentationValue, 8));
};


/** @param {?proto.listenfield.repo.common.NumericRepresentationValue|undefined} value */
proto.listenfield.repo.catalog.Field.Data.prototype.setSlopelength = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.listenfield.repo.catalog.Field.Data.prototype.clearSlopelength = function() {
  this.setSlopelength(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.hasSlopelength = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated string guidanceGroupIds = 9;
 * @return {!Array.<string>}
 */
proto.listenfield.repo.catalog.Field.Data.prototype.getGuidancegroupidsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array.<string>} value */
proto.listenfield.repo.catalog.Field.Data.prototype.setGuidancegroupidsList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.listenfield.repo.catalog.Field.Data.prototype.addGuidancegroupids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.listenfield.repo.catalog.Field.Data.prototype.clearGuidancegroupidsList = function() {
  this.setGuidancegroupidsList([]);
};


/**
 * optional listenfield.repo.common.CompoundIdentifier ids = 1;
 * @return {?proto.listenfield.repo.common.CompoundIdentifier}
 */
proto.listenfield.repo.catalog.Field.prototype.getIds = function() {
  return /** @type{?proto.listenfield.repo.common.CompoundIdentifier} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.CompoundIdentifier, 1));
};


/** @param {?proto.listenfield.repo.common.CompoundIdentifier|undefined} value */
proto.listenfield.repo.catalog.Field.prototype.setIds = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.catalog.Field.prototype.clearIds = function() {
  this.setIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Field.prototype.hasIds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data data = 2;
 * @return {?proto.listenfield.repo.catalog.Field.Data}
 */
proto.listenfield.repo.catalog.Field.prototype.getData = function() {
  return /** @type{?proto.listenfield.repo.catalog.Field.Data} */ (
    jspb.Message.getWrapperField(this, proto.listenfield.repo.catalog.Field.Data, 2));
};


/** @param {?proto.listenfield.repo.catalog.Field.Data|undefined} value */
proto.listenfield.repo.catalog.Field.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.listenfield.repo.catalog.Field.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Field.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.Field.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Field.prototype.setOwner = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated listenfield.repo.common.ContextItem contextItems = 300;
 * @return {!Array.<!proto.listenfield.repo.common.ContextItem>}
 */
proto.listenfield.repo.catalog.Field.prototype.getContextitemsList = function() {
  return /** @type{!Array.<!proto.listenfield.repo.common.ContextItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, repo_common$types_pb.ContextItem, 300));
};


/** @param {!Array.<!proto.listenfield.repo.common.ContextItem>} value */
proto.listenfield.repo.catalog.Field.prototype.setContextitemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 300, value);
};


/**
 * @param {!proto.listenfield.repo.common.ContextItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.listenfield.repo.common.ContextItem}
 */
proto.listenfield.repo.catalog.Field.prototype.addContextitems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 300, opt_value, proto.listenfield.repo.common.ContextItem, opt_index);
};


proto.listenfield.repo.catalog.Field.prototype.clearContextitemsList = function() {
  this.setContextitemsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.Crop = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.Crop.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.Crop, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.Crop.displayName = 'proto.listenfield.repo.catalog.Crop';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.Crop.repeatedFields_ = [300];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.Crop.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.Crop.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.Crop} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Crop.toObject = function(includeInstance, msg) {
  var f, obj = {
    ids: (f = msg.getIds()) && repo_common$types_pb.CompoundIdentifier.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.listenfield.repo.catalog.Crop.Data.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextitemsList: jspb.Message.toObjectList(msg.getContextitemsList(),
    repo_common$types_pb.ContextItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.Crop}
 */
proto.listenfield.repo.catalog.Crop.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.Crop;
  return proto.listenfield.repo.catalog.Crop.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.Crop} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.Crop}
 */
proto.listenfield.repo.catalog.Crop.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_common$types_pb.CompoundIdentifier;
      reader.readMessage(value,repo_common$types_pb.CompoundIdentifier.deserializeBinaryFromReader);
      msg.setIds(value);
      break;
    case 2:
      var value = new proto.listenfield.repo.catalog.Crop.Data;
      reader.readMessage(value,proto.listenfield.repo.catalog.Crop.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 300:
      var value = new repo_common$types_pb.ContextItem;
      reader.readMessage(value,repo_common$types_pb.ContextItem.deserializeBinaryFromReader);
      msg.addContextitems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.Crop.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.Crop.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.Crop} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Crop.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_common$types_pb.CompoundIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.listenfield.repo.catalog.Crop.Data.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextitemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      300,
      f,
      repo_common$types_pb.ContextItem.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.Crop.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.catalog.Crop.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.Crop.Data.displayName = 'proto.listenfield.repo.catalog.Crop.Data';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.Crop.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.Crop.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.Crop.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Crop.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parentid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    referenceweight: (f = msg.getReferenceweight()) && repo_common$types_pb.NumericRepresentationValue.toObject(includeInstance, f),
    standardpayablemoisture: (f = msg.getStandardpayablemoisture()) && repo_common$types_pb.NumericRepresentationValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.Crop.Data}
 */
proto.listenfield.repo.catalog.Crop.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.Crop.Data;
  return proto.listenfield.repo.catalog.Crop.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.Crop.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.Crop.Data}
 */
proto.listenfield.repo.catalog.Crop.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentid(value);
      break;
    case 3:
      var value = new repo_common$types_pb.NumericRepresentationValue;
      reader.readMessage(value,repo_common$types_pb.NumericRepresentationValue.deserializeBinaryFromReader);
      msg.setReferenceweight(value);
      break;
    case 4:
      var value = new repo_common$types_pb.NumericRepresentationValue;
      reader.readMessage(value,repo_common$types_pb.NumericRepresentationValue.deserializeBinaryFromReader);
      msg.setStandardpayablemoisture(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.Crop.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.Crop.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.Crop.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Crop.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParentid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReferenceweight();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      repo_common$types_pb.NumericRepresentationValue.serializeBinaryToWriter
    );
  }
  f = message.getStandardpayablemoisture();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      repo_common$types_pb.NumericRepresentationValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.listenfield.repo.catalog.Crop.Data.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Crop.Data.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string parentId = 2;
 * @return {string}
 */
proto.listenfield.repo.catalog.Crop.Data.prototype.getParentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Crop.Data.prototype.setParentid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional listenfield.repo.common.NumericRepresentationValue referenceWeight = 3;
 * @return {?proto.listenfield.repo.common.NumericRepresentationValue}
 */
proto.listenfield.repo.catalog.Crop.Data.prototype.getReferenceweight = function() {
  return /** @type{?proto.listenfield.repo.common.NumericRepresentationValue} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.NumericRepresentationValue, 3));
};


/** @param {?proto.listenfield.repo.common.NumericRepresentationValue|undefined} value */
proto.listenfield.repo.catalog.Crop.Data.prototype.setReferenceweight = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.listenfield.repo.catalog.Crop.Data.prototype.clearReferenceweight = function() {
  this.setReferenceweight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Crop.Data.prototype.hasReferenceweight = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional listenfield.repo.common.NumericRepresentationValue standardPayableMoisture = 4;
 * @return {?proto.listenfield.repo.common.NumericRepresentationValue}
 */
proto.listenfield.repo.catalog.Crop.Data.prototype.getStandardpayablemoisture = function() {
  return /** @type{?proto.listenfield.repo.common.NumericRepresentationValue} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.NumericRepresentationValue, 4));
};


/** @param {?proto.listenfield.repo.common.NumericRepresentationValue|undefined} value */
proto.listenfield.repo.catalog.Crop.Data.prototype.setStandardpayablemoisture = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.listenfield.repo.catalog.Crop.Data.prototype.clearStandardpayablemoisture = function() {
  this.setStandardpayablemoisture(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Crop.Data.prototype.hasStandardpayablemoisture = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional listenfield.repo.common.CompoundIdentifier ids = 1;
 * @return {?proto.listenfield.repo.common.CompoundIdentifier}
 */
proto.listenfield.repo.catalog.Crop.prototype.getIds = function() {
  return /** @type{?proto.listenfield.repo.common.CompoundIdentifier} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.CompoundIdentifier, 1));
};


/** @param {?proto.listenfield.repo.common.CompoundIdentifier|undefined} value */
proto.listenfield.repo.catalog.Crop.prototype.setIds = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.catalog.Crop.prototype.clearIds = function() {
  this.setIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Crop.prototype.hasIds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data data = 2;
 * @return {?proto.listenfield.repo.catalog.Crop.Data}
 */
proto.listenfield.repo.catalog.Crop.prototype.getData = function() {
  return /** @type{?proto.listenfield.repo.catalog.Crop.Data} */ (
    jspb.Message.getWrapperField(this, proto.listenfield.repo.catalog.Crop.Data, 2));
};


/** @param {?proto.listenfield.repo.catalog.Crop.Data|undefined} value */
proto.listenfield.repo.catalog.Crop.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.listenfield.repo.catalog.Crop.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Crop.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.Crop.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Crop.prototype.setOwner = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated listenfield.repo.common.ContextItem contextItems = 300;
 * @return {!Array.<!proto.listenfield.repo.common.ContextItem>}
 */
proto.listenfield.repo.catalog.Crop.prototype.getContextitemsList = function() {
  return /** @type{!Array.<!proto.listenfield.repo.common.ContextItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, repo_common$types_pb.ContextItem, 300));
};


/** @param {!Array.<!proto.listenfield.repo.common.ContextItem>} value */
proto.listenfield.repo.catalog.Crop.prototype.setContextitemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 300, value);
};


/**
 * @param {!proto.listenfield.repo.common.ContextItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.listenfield.repo.common.ContextItem}
 */
proto.listenfield.repo.catalog.Crop.prototype.addContextitems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 300, opt_value, proto.listenfield.repo.common.ContextItem, opt_index);
};


proto.listenfield.repo.catalog.Crop.prototype.clearContextitemsList = function() {
  this.setContextitemsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.CropZone = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.CropZone.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.CropZone, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.CropZone.displayName = 'proto.listenfield.repo.catalog.CropZone';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.CropZone.repeatedFields_ = [300];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.CropZone.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.CropZone.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.CropZone} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.CropZone.toObject = function(includeInstance, msg) {
  var f, obj = {
    ids: (f = msg.getIds()) && repo_common$types_pb.CompoundIdentifier.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.listenfield.repo.catalog.CropZone.Data.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextitemsList: jspb.Message.toObjectList(msg.getContextitemsList(),
    repo_common$types_pb.ContextItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.CropZone}
 */
proto.listenfield.repo.catalog.CropZone.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.CropZone;
  return proto.listenfield.repo.catalog.CropZone.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.CropZone} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.CropZone}
 */
proto.listenfield.repo.catalog.CropZone.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_common$types_pb.CompoundIdentifier;
      reader.readMessage(value,repo_common$types_pb.CompoundIdentifier.deserializeBinaryFromReader);
      msg.setIds(value);
      break;
    case 2:
      var value = new proto.listenfield.repo.catalog.CropZone.Data;
      reader.readMessage(value,proto.listenfield.repo.catalog.CropZone.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 300:
      var value = new repo_common$types_pb.ContextItem;
      reader.readMessage(value,repo_common$types_pb.ContextItem.deserializeBinaryFromReader);
      msg.addContextitems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.CropZone.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.CropZone.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.CropZone} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.CropZone.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_common$types_pb.CompoundIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.listenfield.repo.catalog.CropZone.Data.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextitemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      300,
      f,
      repo_common$types_pb.ContextItem.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.CropZone.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.CropZone.Data.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.CropZone.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.CropZone.Data.displayName = 'proto.listenfield.repo.catalog.CropZone.Data';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.CropZone.Data.repeatedFields_ = [1,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.CropZone.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.CropZone.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.CropZone.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    timescopeidsList: jspb.Message.getRepeatedField(msg, 1),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fieldid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cropid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    area: (f = msg.getArea()) && repo_common$types_pb.NumericRepresentationValue.toObject(includeInstance, f),
    boundingregion: (f = msg.getBoundingregion()) && repo_common$types_pb.MultiPolygon.toObject(includeInstance, f),
    boundarysource: (f = msg.getBoundarysource()) && repo_common$types_pb.GpsSource.toObject(includeInstance, f),
    noteidsList: jspb.Message.getRepeatedField(msg, 8),
    guidancegroupidsList: jspb.Message.getRepeatedField(msg, 9)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.CropZone.Data}
 */
proto.listenfield.repo.catalog.CropZone.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.CropZone.Data;
  return proto.listenfield.repo.catalog.CropZone.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.CropZone.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.CropZone.Data}
 */
proto.listenfield.repo.catalog.CropZone.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTimescopeids(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCropid(value);
      break;
    case 5:
      var value = new repo_common$types_pb.NumericRepresentationValue;
      reader.readMessage(value,repo_common$types_pb.NumericRepresentationValue.deserializeBinaryFromReader);
      msg.setArea(value);
      break;
    case 6:
      var value = new repo_common$types_pb.MultiPolygon;
      reader.readMessage(value,repo_common$types_pb.MultiPolygon.deserializeBinaryFromReader);
      msg.setBoundingregion(value);
      break;
    case 7:
      var value = new repo_common$types_pb.GpsSource;
      reader.readMessage(value,repo_common$types_pb.GpsSource.deserializeBinaryFromReader);
      msg.setBoundarysource(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addNoteids(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addGuidancegroupids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.CropZone.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.CropZone.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.CropZone.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimescopeidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFieldid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCropid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getArea();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      repo_common$types_pb.NumericRepresentationValue.serializeBinaryToWriter
    );
  }
  f = message.getBoundingregion();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      repo_common$types_pb.MultiPolygon.serializeBinaryToWriter
    );
  }
  f = message.getBoundarysource();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      repo_common$types_pb.GpsSource.serializeBinaryToWriter
    );
  }
  f = message.getNoteidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getGuidancegroupidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
};


/**
 * repeated string timeScopeIds = 1;
 * @return {!Array.<string>}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.getTimescopeidsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.listenfield.repo.catalog.CropZone.Data.prototype.setTimescopeidsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.addTimescopeids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.listenfield.repo.catalog.CropZone.Data.prototype.clearTimescopeidsList = function() {
  this.setTimescopeidsList([]);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.CropZone.Data.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string fieldId = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.getFieldid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.CropZone.Data.prototype.setFieldid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string cropId = 4;
 * @return {string}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.getCropid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.CropZone.Data.prototype.setCropid = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional listenfield.repo.common.NumericRepresentationValue area = 5;
 * @return {?proto.listenfield.repo.common.NumericRepresentationValue}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.getArea = function() {
  return /** @type{?proto.listenfield.repo.common.NumericRepresentationValue} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.NumericRepresentationValue, 5));
};


/** @param {?proto.listenfield.repo.common.NumericRepresentationValue|undefined} value */
proto.listenfield.repo.catalog.CropZone.Data.prototype.setArea = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.listenfield.repo.catalog.CropZone.Data.prototype.clearArea = function() {
  this.setArea(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.hasArea = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional listenfield.repo.common.MultiPolygon boundingRegion = 6;
 * @return {?proto.listenfield.repo.common.MultiPolygon}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.getBoundingregion = function() {
  return /** @type{?proto.listenfield.repo.common.MultiPolygon} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.MultiPolygon, 6));
};


/** @param {?proto.listenfield.repo.common.MultiPolygon|undefined} value */
proto.listenfield.repo.catalog.CropZone.Data.prototype.setBoundingregion = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.listenfield.repo.catalog.CropZone.Data.prototype.clearBoundingregion = function() {
  this.setBoundingregion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.hasBoundingregion = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional listenfield.repo.common.GpsSource boundarySource = 7;
 * @return {?proto.listenfield.repo.common.GpsSource}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.getBoundarysource = function() {
  return /** @type{?proto.listenfield.repo.common.GpsSource} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.GpsSource, 7));
};


/** @param {?proto.listenfield.repo.common.GpsSource|undefined} value */
proto.listenfield.repo.catalog.CropZone.Data.prototype.setBoundarysource = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.listenfield.repo.catalog.CropZone.Data.prototype.clearBoundarysource = function() {
  this.setBoundarysource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.hasBoundarysource = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated string noteIds = 8;
 * @return {!Array.<string>}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.getNoteidsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array.<string>} value */
proto.listenfield.repo.catalog.CropZone.Data.prototype.setNoteidsList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.addNoteids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.listenfield.repo.catalog.CropZone.Data.prototype.clearNoteidsList = function() {
  this.setNoteidsList([]);
};


/**
 * repeated string guidanceGroupIds = 9;
 * @return {!Array.<string>}
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.getGuidancegroupidsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array.<string>} value */
proto.listenfield.repo.catalog.CropZone.Data.prototype.setGuidancegroupidsList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.listenfield.repo.catalog.CropZone.Data.prototype.addGuidancegroupids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.listenfield.repo.catalog.CropZone.Data.prototype.clearGuidancegroupidsList = function() {
  this.setGuidancegroupidsList([]);
};


/**
 * optional listenfield.repo.common.CompoundIdentifier ids = 1;
 * @return {?proto.listenfield.repo.common.CompoundIdentifier}
 */
proto.listenfield.repo.catalog.CropZone.prototype.getIds = function() {
  return /** @type{?proto.listenfield.repo.common.CompoundIdentifier} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.CompoundIdentifier, 1));
};


/** @param {?proto.listenfield.repo.common.CompoundIdentifier|undefined} value */
proto.listenfield.repo.catalog.CropZone.prototype.setIds = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.catalog.CropZone.prototype.clearIds = function() {
  this.setIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.CropZone.prototype.hasIds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data data = 2;
 * @return {?proto.listenfield.repo.catalog.CropZone.Data}
 */
proto.listenfield.repo.catalog.CropZone.prototype.getData = function() {
  return /** @type{?proto.listenfield.repo.catalog.CropZone.Data} */ (
    jspb.Message.getWrapperField(this, proto.listenfield.repo.catalog.CropZone.Data, 2));
};


/** @param {?proto.listenfield.repo.catalog.CropZone.Data|undefined} value */
proto.listenfield.repo.catalog.CropZone.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.listenfield.repo.catalog.CropZone.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.CropZone.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.CropZone.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.CropZone.prototype.setOwner = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated listenfield.repo.common.ContextItem contextItems = 300;
 * @return {!Array.<!proto.listenfield.repo.common.ContextItem>}
 */
proto.listenfield.repo.catalog.CropZone.prototype.getContextitemsList = function() {
  return /** @type{!Array.<!proto.listenfield.repo.common.ContextItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, repo_common$types_pb.ContextItem, 300));
};


/** @param {!Array.<!proto.listenfield.repo.common.ContextItem>} value */
proto.listenfield.repo.catalog.CropZone.prototype.setContextitemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 300, value);
};


/**
 * @param {!proto.listenfield.repo.common.ContextItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.listenfield.repo.common.ContextItem}
 */
proto.listenfield.repo.catalog.CropZone.prototype.addContextitems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 300, opt_value, proto.listenfield.repo.common.ContextItem, opt_index);
};


proto.listenfield.repo.catalog.CropZone.prototype.clearContextitemsList = function() {
  this.setContextitemsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.Person = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.Person.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.Person, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.Person.displayName = 'proto.listenfield.repo.catalog.Person';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.Person.repeatedFields_ = [300];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.Person.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.Person.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.Person} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Person.toObject = function(includeInstance, msg) {
  var f, obj = {
    ids: (f = msg.getIds()) && repo_common$types_pb.CompoundIdentifier.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.listenfield.repo.catalog.Person.Data.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextitemsList: jspb.Message.toObjectList(msg.getContextitemsList(),
    repo_common$types_pb.ContextItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.Person}
 */
proto.listenfield.repo.catalog.Person.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.Person;
  return proto.listenfield.repo.catalog.Person.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.Person} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.Person}
 */
proto.listenfield.repo.catalog.Person.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_common$types_pb.CompoundIdentifier;
      reader.readMessage(value,repo_common$types_pb.CompoundIdentifier.deserializeBinaryFromReader);
      msg.setIds(value);
      break;
    case 2:
      var value = new proto.listenfield.repo.catalog.Person.Data;
      reader.readMessage(value,proto.listenfield.repo.catalog.Person.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 300:
      var value = new repo_common$types_pb.ContextItem;
      reader.readMessage(value,repo_common$types_pb.ContextItem.deserializeBinaryFromReader);
      msg.addContextitems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.Person.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.Person.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.Person} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Person.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_common$types_pb.CompoundIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.listenfield.repo.catalog.Person.Data.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextitemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      300,
      f,
      repo_common$types_pb.ContextItem.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.Person.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.catalog.Person.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.Person.Data.displayName = 'proto.listenfield.repo.catalog.Person.Data';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.Person.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.Person.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.Person.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Person.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    middlename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    combinedname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contactinfoid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.Person.Data}
 */
proto.listenfield.repo.catalog.Person.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.Person.Data;
  return proto.listenfield.repo.catalog.Person.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.Person.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.Person.Data}
 */
proto.listenfield.repo.catalog.Person.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiddlename(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCombinedname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactinfoid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.Person.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.Person.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.Person.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Person.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMiddlename();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCombinedname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContactinfoid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string firstName = 1;
 * @return {string}
 */
proto.listenfield.repo.catalog.Person.Data.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Person.Data.prototype.setFirstname = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string middleName = 2;
 * @return {string}
 */
proto.listenfield.repo.catalog.Person.Data.prototype.getMiddlename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Person.Data.prototype.setMiddlename = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string lastName = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.Person.Data.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Person.Data.prototype.setLastname = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string combinedName = 4;
 * @return {string}
 */
proto.listenfield.repo.catalog.Person.Data.prototype.getCombinedname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Person.Data.prototype.setCombinedname = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string contactInfoId = 5;
 * @return {string}
 */
proto.listenfield.repo.catalog.Person.Data.prototype.getContactinfoid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Person.Data.prototype.setContactinfoid = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional listenfield.repo.common.CompoundIdentifier ids = 1;
 * @return {?proto.listenfield.repo.common.CompoundIdentifier}
 */
proto.listenfield.repo.catalog.Person.prototype.getIds = function() {
  return /** @type{?proto.listenfield.repo.common.CompoundIdentifier} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.CompoundIdentifier, 1));
};


/** @param {?proto.listenfield.repo.common.CompoundIdentifier|undefined} value */
proto.listenfield.repo.catalog.Person.prototype.setIds = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.catalog.Person.prototype.clearIds = function() {
  this.setIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Person.prototype.hasIds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data data = 2;
 * @return {?proto.listenfield.repo.catalog.Person.Data}
 */
proto.listenfield.repo.catalog.Person.prototype.getData = function() {
  return /** @type{?proto.listenfield.repo.catalog.Person.Data} */ (
    jspb.Message.getWrapperField(this, proto.listenfield.repo.catalog.Person.Data, 2));
};


/** @param {?proto.listenfield.repo.catalog.Person.Data|undefined} value */
proto.listenfield.repo.catalog.Person.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.listenfield.repo.catalog.Person.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Person.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.Person.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Person.prototype.setOwner = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated listenfield.repo.common.ContextItem contextItems = 300;
 * @return {!Array.<!proto.listenfield.repo.common.ContextItem>}
 */
proto.listenfield.repo.catalog.Person.prototype.getContextitemsList = function() {
  return /** @type{!Array.<!proto.listenfield.repo.common.ContextItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, repo_common$types_pb.ContextItem, 300));
};


/** @param {!Array.<!proto.listenfield.repo.common.ContextItem>} value */
proto.listenfield.repo.catalog.Person.prototype.setContextitemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 300, value);
};


/**
 * @param {!proto.listenfield.repo.common.ContextItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.listenfield.repo.common.ContextItem}
 */
proto.listenfield.repo.catalog.Person.prototype.addContextitems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 300, opt_value, proto.listenfield.repo.common.ContextItem, opt_index);
};


proto.listenfield.repo.catalog.Person.prototype.clearContextitemsList = function() {
  this.setContextitemsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.PersonRole = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.PersonRole.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.PersonRole, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.PersonRole.displayName = 'proto.listenfield.repo.catalog.PersonRole';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.PersonRole.repeatedFields_ = [300];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.PersonRole.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.PersonRole.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.PersonRole} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.PersonRole.toObject = function(includeInstance, msg) {
  var f, obj = {
    ids: (f = msg.getIds()) && repo_common$types_pb.CompoundIdentifier.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.listenfield.repo.catalog.PersonRole.Data.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextitemsList: jspb.Message.toObjectList(msg.getContextitemsList(),
    repo_common$types_pb.ContextItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.PersonRole}
 */
proto.listenfield.repo.catalog.PersonRole.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.PersonRole;
  return proto.listenfield.repo.catalog.PersonRole.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.PersonRole} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.PersonRole}
 */
proto.listenfield.repo.catalog.PersonRole.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_common$types_pb.CompoundIdentifier;
      reader.readMessage(value,repo_common$types_pb.CompoundIdentifier.deserializeBinaryFromReader);
      msg.setIds(value);
      break;
    case 2:
      var value = new proto.listenfield.repo.catalog.PersonRole.Data;
      reader.readMessage(value,proto.listenfield.repo.catalog.PersonRole.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 300:
      var value = new repo_common$types_pb.ContextItem;
      reader.readMessage(value,repo_common$types_pb.ContextItem.deserializeBinaryFromReader);
      msg.addContextitems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.PersonRole.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.PersonRole.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.PersonRole} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.PersonRole.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_common$types_pb.CompoundIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.listenfield.repo.catalog.PersonRole.Data.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextitemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      300,
      f,
      repo_common$types_pb.ContextItem.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.displayName = 'proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum}
 */
proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum;
  return proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum}
 */
proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.Value = {
  UNSPECIFIED: 0,
  GROWER: 1,
  MARKETPROVIDER: 2,
  CUSTOMER: 3,
  OPERATOR: 4,
  OWNER: 5,
  FARMMANAGER: 6,
  MARKETADVISOR: 7,
  ENDUSER: 8,
  FINANCIER: 9,
  INSURANCEAGENT: 10,
  GOVERNMENTAGENCY: 11,
  FIXEDASSETSUPPLIER: 12,
  MOBILEASSETSUPPLIER: 13,
  INPUTSUPPLIER: 14,
  IRRIGATIONMANAGER: 15,
  CROPADVISOR: 16,
  CUSTOMSERVICEPROVIDER: 17,
  LABORER: 18,
  TRANSPORTER: 19,
  DATASERVICESPROVIDER: 20,
  AUTHORIZER: 21
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.PersonRole.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.PersonRole.Data.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.PersonRole.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.PersonRole.Data.displayName = 'proto.listenfield.repo.catalog.PersonRole.Data';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.PersonRole.Data.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.PersonRole.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.PersonRole.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.PersonRole.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.PersonRole.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    personid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    growerid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    activescopeidsList: jspb.Message.getRepeatedField(msg, 3),
    role: jspb.Message.getFieldWithDefault(msg, 4, 0),
    companyid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.PersonRole.Data}
 */
proto.listenfield.repo.catalog.PersonRole.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.PersonRole.Data;
  return proto.listenfield.repo.catalog.PersonRole.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.PersonRole.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.PersonRole.Data}
 */
proto.listenfield.repo.catalog.PersonRole.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGrowerid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addActivescopeids(value);
      break;
    case 4:
      var value = /** @type {!proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.Value} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.PersonRole.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.PersonRole.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.PersonRole.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.PersonRole.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPersonid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGrowerid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getActivescopeidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getCompanyid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string personId = 1;
 * @return {string}
 */
proto.listenfield.repo.catalog.PersonRole.Data.prototype.getPersonid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.PersonRole.Data.prototype.setPersonid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string growerId = 2;
 * @return {string}
 */
proto.listenfield.repo.catalog.PersonRole.Data.prototype.getGrowerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.PersonRole.Data.prototype.setGrowerid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated string activeScopeIds = 3;
 * @return {!Array.<string>}
 */
proto.listenfield.repo.catalog.PersonRole.Data.prototype.getActivescopeidsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<string>} value */
proto.listenfield.repo.catalog.PersonRole.Data.prototype.setActivescopeidsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.listenfield.repo.catalog.PersonRole.Data.prototype.addActivescopeids = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.listenfield.repo.catalog.PersonRole.Data.prototype.clearActivescopeidsList = function() {
  this.setActivescopeidsList([]);
};


/**
 * optional PersonRolesEnum.Value role = 4;
 * @return {!proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.Value}
 */
proto.listenfield.repo.catalog.PersonRole.Data.prototype.getRole = function() {
  return /** @type {!proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.Value} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.Value} value */
proto.listenfield.repo.catalog.PersonRole.Data.prototype.setRole = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string companyId = 5;
 * @return {string}
 */
proto.listenfield.repo.catalog.PersonRole.Data.prototype.getCompanyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.PersonRole.Data.prototype.setCompanyid = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional listenfield.repo.common.CompoundIdentifier ids = 1;
 * @return {?proto.listenfield.repo.common.CompoundIdentifier}
 */
proto.listenfield.repo.catalog.PersonRole.prototype.getIds = function() {
  return /** @type{?proto.listenfield.repo.common.CompoundIdentifier} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.CompoundIdentifier, 1));
};


/** @param {?proto.listenfield.repo.common.CompoundIdentifier|undefined} value */
proto.listenfield.repo.catalog.PersonRole.prototype.setIds = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.catalog.PersonRole.prototype.clearIds = function() {
  this.setIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.PersonRole.prototype.hasIds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data data = 2;
 * @return {?proto.listenfield.repo.catalog.PersonRole.Data}
 */
proto.listenfield.repo.catalog.PersonRole.prototype.getData = function() {
  return /** @type{?proto.listenfield.repo.catalog.PersonRole.Data} */ (
    jspb.Message.getWrapperField(this, proto.listenfield.repo.catalog.PersonRole.Data, 2));
};


/** @param {?proto.listenfield.repo.catalog.PersonRole.Data|undefined} value */
proto.listenfield.repo.catalog.PersonRole.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.listenfield.repo.catalog.PersonRole.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.PersonRole.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.PersonRole.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.PersonRole.prototype.setOwner = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated listenfield.repo.common.ContextItem contextItems = 300;
 * @return {!Array.<!proto.listenfield.repo.common.ContextItem>}
 */
proto.listenfield.repo.catalog.PersonRole.prototype.getContextitemsList = function() {
  return /** @type{!Array.<!proto.listenfield.repo.common.ContextItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, repo_common$types_pb.ContextItem, 300));
};


/** @param {!Array.<!proto.listenfield.repo.common.ContextItem>} value */
proto.listenfield.repo.catalog.PersonRole.prototype.setContextitemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 300, value);
};


/**
 * @param {!proto.listenfield.repo.common.ContextItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.listenfield.repo.common.ContextItem}
 */
proto.listenfield.repo.catalog.PersonRole.prototype.addContextitems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 300, opt_value, proto.listenfield.repo.common.ContextItem, opt_index);
};


proto.listenfield.repo.catalog.PersonRole.prototype.clearContextitemsList = function() {
  this.setContextitemsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.Company = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.listenfield.repo.catalog.Company.repeatedFields_, null);
};
goog.inherits(proto.listenfield.repo.catalog.Company, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.Company.displayName = 'proto.listenfield.repo.catalog.Company';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.listenfield.repo.catalog.Company.repeatedFields_ = [300];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.Company.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.Company.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.Company} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Company.toObject = function(includeInstance, msg) {
  var f, obj = {
    ids: (f = msg.getIds()) && repo_common$types_pb.CompoundIdentifier.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.listenfield.repo.catalog.Company.Data.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextitemsList: jspb.Message.toObjectList(msg.getContextitemsList(),
    repo_common$types_pb.ContextItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.Company}
 */
proto.listenfield.repo.catalog.Company.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.Company;
  return proto.listenfield.repo.catalog.Company.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.Company} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.Company}
 */
proto.listenfield.repo.catalog.Company.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_common$types_pb.CompoundIdentifier;
      reader.readMessage(value,repo_common$types_pb.CompoundIdentifier.deserializeBinaryFromReader);
      msg.setIds(value);
      break;
    case 2:
      var value = new proto.listenfield.repo.catalog.Company.Data;
      reader.readMessage(value,proto.listenfield.repo.catalog.Company.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 300:
      var value = new repo_common$types_pb.ContextItem;
      reader.readMessage(value,repo_common$types_pb.ContextItem.deserializeBinaryFromReader);
      msg.addContextitems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.Company.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.Company.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.Company} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Company.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_common$types_pb.CompoundIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.listenfield.repo.catalog.Company.Data.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextitemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      300,
      f,
      repo_common$types_pb.ContextItem.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.catalog.Company.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.catalog.Company.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.catalog.Company.Data.displayName = 'proto.listenfield.repo.catalog.Company.Data';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.catalog.Company.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.catalog.Company.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.catalog.Company.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Company.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contactinfoid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.catalog.Company.Data}
 */
proto.listenfield.repo.catalog.Company.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.catalog.Company.Data;
  return proto.listenfield.repo.catalog.Company.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.catalog.Company.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.catalog.Company.Data}
 */
proto.listenfield.repo.catalog.Company.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactinfoid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.catalog.Company.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.catalog.Company.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.catalog.Company.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.catalog.Company.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContactinfoid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.listenfield.repo.catalog.Company.Data.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Company.Data.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string contactInfoId = 2;
 * @return {string}
 */
proto.listenfield.repo.catalog.Company.Data.prototype.getContactinfoid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Company.Data.prototype.setContactinfoid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional listenfield.repo.common.CompoundIdentifier ids = 1;
 * @return {?proto.listenfield.repo.common.CompoundIdentifier}
 */
proto.listenfield.repo.catalog.Company.prototype.getIds = function() {
  return /** @type{?proto.listenfield.repo.common.CompoundIdentifier} */ (
    jspb.Message.getWrapperField(this, repo_common$types_pb.CompoundIdentifier, 1));
};


/** @param {?proto.listenfield.repo.common.CompoundIdentifier|undefined} value */
proto.listenfield.repo.catalog.Company.prototype.setIds = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.catalog.Company.prototype.clearIds = function() {
  this.setIds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Company.prototype.hasIds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Data data = 2;
 * @return {?proto.listenfield.repo.catalog.Company.Data}
 */
proto.listenfield.repo.catalog.Company.prototype.getData = function() {
  return /** @type{?proto.listenfield.repo.catalog.Company.Data} */ (
    jspb.Message.getWrapperField(this, proto.listenfield.repo.catalog.Company.Data, 2));
};


/** @param {?proto.listenfield.repo.catalog.Company.Data|undefined} value */
proto.listenfield.repo.catalog.Company.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.listenfield.repo.catalog.Company.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.catalog.Company.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string owner = 3;
 * @return {string}
 */
proto.listenfield.repo.catalog.Company.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.catalog.Company.prototype.setOwner = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated listenfield.repo.common.ContextItem contextItems = 300;
 * @return {!Array.<!proto.listenfield.repo.common.ContextItem>}
 */
proto.listenfield.repo.catalog.Company.prototype.getContextitemsList = function() {
  return /** @type{!Array.<!proto.listenfield.repo.common.ContextItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, repo_common$types_pb.ContextItem, 300));
};


/** @param {!Array.<!proto.listenfield.repo.common.ContextItem>} value */
proto.listenfield.repo.catalog.Company.prototype.setContextitemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 300, value);
};


/**
 * @param {!proto.listenfield.repo.common.ContextItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.listenfield.repo.common.ContextItem}
 */
proto.listenfield.repo.catalog.Company.prototype.addContextitems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 300, opt_value, proto.listenfield.repo.common.ContextItem, opt_index);
};


proto.listenfield.repo.catalog.Company.prototype.clearContextitemsList = function() {
  this.setContextitemsList([]);
};


goog.object.extend(exports, proto.listenfield.repo.catalog);
