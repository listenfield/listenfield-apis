/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var repo_catalog$types_pb = require('../repo/catalog-types_pb.js');
var api_pb = require('../api_pb.js');
goog.exportSymbol('proto.listenfield.repo.QueryCompanyResult', null, global);
goog.exportSymbol('proto.listenfield.repo.QueryContactInfoResult', null, global);
goog.exportSymbol('proto.listenfield.repo.QueryCropResult', null, global);
goog.exportSymbol('proto.listenfield.repo.QueryCropZoneResult', null, global);
goog.exportSymbol('proto.listenfield.repo.QueryFarmResult', null, global);
goog.exportSymbol('proto.listenfield.repo.QueryFieldBoundaryResult', null, global);
goog.exportSymbol('proto.listenfield.repo.QueryFieldResult', null, global);
goog.exportSymbol('proto.listenfield.repo.QueryGrowerResult', null, global);
goog.exportSymbol('proto.listenfield.repo.QueryPersonResult', null, global);
goog.exportSymbol('proto.listenfield.repo.QueryPersonRoleRequest', null, global);
goog.exportSymbol('proto.listenfield.repo.QueryPersonRoleResult', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertCompanyRequest', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertCompanyResult', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertContactInfoRequest', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertContactInfoResult', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertCropRequest', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertCropResult', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertCropZoneRequest', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertCropZoneResult', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertFarmRequest', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertFarmResult', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertFieldBoundaryRequest', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertFieldBoundaryResult', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertFieldRequest', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertFieldResult', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertGrowerRequest', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertGrowerResult', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertPersonRequest', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertPersonResult', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertPersonRoleRequest', null, global);
goog.exportSymbol('proto.listenfield.repo.UpsertPersonRoleResult', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertFieldBoundaryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertFieldBoundaryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertFieldBoundaryRequest.displayName = 'proto.listenfield.repo.UpsertFieldBoundaryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertFieldBoundaryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertFieldBoundaryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertFieldBoundaryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertFieldBoundaryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.FieldBoundary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertFieldBoundaryRequest}
 */
proto.listenfield.repo.UpsertFieldBoundaryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertFieldBoundaryRequest;
  return proto.listenfield.repo.UpsertFieldBoundaryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertFieldBoundaryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertFieldBoundaryRequest}
 */
proto.listenfield.repo.UpsertFieldBoundaryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.FieldBoundary;
      reader.readMessage(value,repo_catalog$types_pb.FieldBoundary.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertFieldBoundaryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertFieldBoundaryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertFieldBoundaryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertFieldBoundaryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.FieldBoundary.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.FieldBoundary item = 1;
 * @return {?proto.listenfield.repo.catalog.FieldBoundary}
 */
proto.listenfield.repo.UpsertFieldBoundaryRequest.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.FieldBoundary} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.FieldBoundary, 1));
};


/** @param {?proto.listenfield.repo.catalog.FieldBoundary|undefined} value */
proto.listenfield.repo.UpsertFieldBoundaryRequest.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertFieldBoundaryRequest.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertFieldBoundaryRequest.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertFieldBoundaryResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertFieldBoundaryResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertFieldBoundaryResult.displayName = 'proto.listenfield.repo.UpsertFieldBoundaryResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertFieldBoundaryResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertFieldBoundaryResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertFieldBoundaryResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertFieldBoundaryResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.FieldBoundary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertFieldBoundaryResult}
 */
proto.listenfield.repo.UpsertFieldBoundaryResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertFieldBoundaryResult;
  return proto.listenfield.repo.UpsertFieldBoundaryResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertFieldBoundaryResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertFieldBoundaryResult}
 */
proto.listenfield.repo.UpsertFieldBoundaryResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.FieldBoundary;
      reader.readMessage(value,repo_catalog$types_pb.FieldBoundary.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertFieldBoundaryResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertFieldBoundaryResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertFieldBoundaryResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertFieldBoundaryResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.FieldBoundary.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.FieldBoundary item = 1;
 * @return {?proto.listenfield.repo.catalog.FieldBoundary}
 */
proto.listenfield.repo.UpsertFieldBoundaryResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.FieldBoundary} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.FieldBoundary, 1));
};


/** @param {?proto.listenfield.repo.catalog.FieldBoundary|undefined} value */
proto.listenfield.repo.UpsertFieldBoundaryResult.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertFieldBoundaryResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertFieldBoundaryResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.QueryFieldBoundaryResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.listenfield.repo.QueryFieldBoundaryResult.oneofGroups_);
};
goog.inherits(proto.listenfield.repo.QueryFieldBoundaryResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.QueryFieldBoundaryResult.displayName = 'proto.listenfield.repo.QueryFieldBoundaryResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.listenfield.repo.QueryFieldBoundaryResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.listenfield.repo.QueryFieldBoundaryResult.QueryResOneofCase = {
  QUERY_RES_ONEOF_NOT_SET: 0,
  ITEM: 1,
  QUERYMETA: 2
};

/**
 * @return {proto.listenfield.repo.QueryFieldBoundaryResult.QueryResOneofCase}
 */
proto.listenfield.repo.QueryFieldBoundaryResult.prototype.getQueryResOneofCase = function() {
  return /** @type {proto.listenfield.repo.QueryFieldBoundaryResult.QueryResOneofCase} */(jspb.Message.computeOneofCase(this, proto.listenfield.repo.QueryFieldBoundaryResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.QueryFieldBoundaryResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.QueryFieldBoundaryResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.QueryFieldBoundaryResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryFieldBoundaryResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.FieldBoundary.toObject(includeInstance, f),
    querymeta: (f = msg.getQuerymeta()) && api_pb.BatchedQueryMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.QueryFieldBoundaryResult}
 */
proto.listenfield.repo.QueryFieldBoundaryResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.QueryFieldBoundaryResult;
  return proto.listenfield.repo.QueryFieldBoundaryResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.QueryFieldBoundaryResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.QueryFieldBoundaryResult}
 */
proto.listenfield.repo.QueryFieldBoundaryResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.FieldBoundary;
      reader.readMessage(value,repo_catalog$types_pb.FieldBoundary.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = new api_pb.BatchedQueryMetadata;
      reader.readMessage(value,api_pb.BatchedQueryMetadata.deserializeBinaryFromReader);
      msg.setQuerymeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.QueryFieldBoundaryResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.QueryFieldBoundaryResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.QueryFieldBoundaryResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryFieldBoundaryResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.FieldBoundary.serializeBinaryToWriter
    );
  }
  f = message.getQuerymeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_pb.BatchedQueryMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.FieldBoundary item = 1;
 * @return {?proto.listenfield.repo.catalog.FieldBoundary}
 */
proto.listenfield.repo.QueryFieldBoundaryResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.FieldBoundary} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.FieldBoundary, 1));
};


/** @param {?proto.listenfield.repo.catalog.FieldBoundary|undefined} value */
proto.listenfield.repo.QueryFieldBoundaryResult.prototype.setItem = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.listenfield.repo.QueryFieldBoundaryResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryFieldBoundaryResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryFieldBoundaryResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional listenfield.BatchedQueryMetadata queryMeta = 2;
 * @return {?proto.listenfield.BatchedQueryMetadata}
 */
proto.listenfield.repo.QueryFieldBoundaryResult.prototype.getQuerymeta = function() {
  return /** @type{?proto.listenfield.BatchedQueryMetadata} */ (
    jspb.Message.getWrapperField(this, api_pb.BatchedQueryMetadata, 2));
};


/** @param {?proto.listenfield.BatchedQueryMetadata|undefined} value */
proto.listenfield.repo.QueryFieldBoundaryResult.prototype.setQuerymeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.listenfield.repo.QueryFieldBoundaryResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryFieldBoundaryResult.prototype.clearQuerymeta = function() {
  this.setQuerymeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryFieldBoundaryResult.prototype.hasQuerymeta = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertFieldRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertFieldRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertFieldRequest.displayName = 'proto.listenfield.repo.UpsertFieldRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertFieldRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertFieldRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertFieldRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertFieldRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Field.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertFieldRequest}
 */
proto.listenfield.repo.UpsertFieldRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertFieldRequest;
  return proto.listenfield.repo.UpsertFieldRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertFieldRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertFieldRequest}
 */
proto.listenfield.repo.UpsertFieldRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Field;
      reader.readMessage(value,repo_catalog$types_pb.Field.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertFieldRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertFieldRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertFieldRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertFieldRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Field.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Field item = 1;
 * @return {?proto.listenfield.repo.catalog.Field}
 */
proto.listenfield.repo.UpsertFieldRequest.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Field} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Field, 1));
};


/** @param {?proto.listenfield.repo.catalog.Field|undefined} value */
proto.listenfield.repo.UpsertFieldRequest.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertFieldRequest.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertFieldRequest.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertFieldResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertFieldResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertFieldResult.displayName = 'proto.listenfield.repo.UpsertFieldResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertFieldResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertFieldResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertFieldResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertFieldResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Field.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertFieldResult}
 */
proto.listenfield.repo.UpsertFieldResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertFieldResult;
  return proto.listenfield.repo.UpsertFieldResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertFieldResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertFieldResult}
 */
proto.listenfield.repo.UpsertFieldResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Field;
      reader.readMessage(value,repo_catalog$types_pb.Field.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertFieldResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertFieldResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertFieldResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertFieldResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Field.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Field item = 1;
 * @return {?proto.listenfield.repo.catalog.Field}
 */
proto.listenfield.repo.UpsertFieldResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Field} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Field, 1));
};


/** @param {?proto.listenfield.repo.catalog.Field|undefined} value */
proto.listenfield.repo.UpsertFieldResult.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertFieldResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertFieldResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.QueryFieldResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.listenfield.repo.QueryFieldResult.oneofGroups_);
};
goog.inherits(proto.listenfield.repo.QueryFieldResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.QueryFieldResult.displayName = 'proto.listenfield.repo.QueryFieldResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.listenfield.repo.QueryFieldResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.listenfield.repo.QueryFieldResult.QueryResOneofCase = {
  QUERY_RES_ONEOF_NOT_SET: 0,
  ITEM: 1,
  QUERYMETA: 2
};

/**
 * @return {proto.listenfield.repo.QueryFieldResult.QueryResOneofCase}
 */
proto.listenfield.repo.QueryFieldResult.prototype.getQueryResOneofCase = function() {
  return /** @type {proto.listenfield.repo.QueryFieldResult.QueryResOneofCase} */(jspb.Message.computeOneofCase(this, proto.listenfield.repo.QueryFieldResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.QueryFieldResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.QueryFieldResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.QueryFieldResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryFieldResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Field.toObject(includeInstance, f),
    querymeta: (f = msg.getQuerymeta()) && api_pb.BatchedQueryMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.QueryFieldResult}
 */
proto.listenfield.repo.QueryFieldResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.QueryFieldResult;
  return proto.listenfield.repo.QueryFieldResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.QueryFieldResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.QueryFieldResult}
 */
proto.listenfield.repo.QueryFieldResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Field;
      reader.readMessage(value,repo_catalog$types_pb.Field.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = new api_pb.BatchedQueryMetadata;
      reader.readMessage(value,api_pb.BatchedQueryMetadata.deserializeBinaryFromReader);
      msg.setQuerymeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.QueryFieldResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.QueryFieldResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.QueryFieldResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryFieldResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Field.serializeBinaryToWriter
    );
  }
  f = message.getQuerymeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_pb.BatchedQueryMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Field item = 1;
 * @return {?proto.listenfield.repo.catalog.Field}
 */
proto.listenfield.repo.QueryFieldResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Field} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Field, 1));
};


/** @param {?proto.listenfield.repo.catalog.Field|undefined} value */
proto.listenfield.repo.QueryFieldResult.prototype.setItem = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.listenfield.repo.QueryFieldResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryFieldResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryFieldResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional listenfield.BatchedQueryMetadata queryMeta = 2;
 * @return {?proto.listenfield.BatchedQueryMetadata}
 */
proto.listenfield.repo.QueryFieldResult.prototype.getQuerymeta = function() {
  return /** @type{?proto.listenfield.BatchedQueryMetadata} */ (
    jspb.Message.getWrapperField(this, api_pb.BatchedQueryMetadata, 2));
};


/** @param {?proto.listenfield.BatchedQueryMetadata|undefined} value */
proto.listenfield.repo.QueryFieldResult.prototype.setQuerymeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.listenfield.repo.QueryFieldResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryFieldResult.prototype.clearQuerymeta = function() {
  this.setQuerymeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryFieldResult.prototype.hasQuerymeta = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertFarmRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertFarmRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertFarmRequest.displayName = 'proto.listenfield.repo.UpsertFarmRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertFarmRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertFarmRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertFarmRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertFarmRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Farm.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertFarmRequest}
 */
proto.listenfield.repo.UpsertFarmRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertFarmRequest;
  return proto.listenfield.repo.UpsertFarmRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertFarmRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertFarmRequest}
 */
proto.listenfield.repo.UpsertFarmRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Farm;
      reader.readMessage(value,repo_catalog$types_pb.Farm.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertFarmRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertFarmRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertFarmRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertFarmRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Farm.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Farm item = 1;
 * @return {?proto.listenfield.repo.catalog.Farm}
 */
proto.listenfield.repo.UpsertFarmRequest.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Farm} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Farm, 1));
};


/** @param {?proto.listenfield.repo.catalog.Farm|undefined} value */
proto.listenfield.repo.UpsertFarmRequest.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertFarmRequest.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertFarmRequest.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertFarmResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertFarmResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertFarmResult.displayName = 'proto.listenfield.repo.UpsertFarmResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertFarmResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertFarmResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertFarmResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertFarmResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Farm.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertFarmResult}
 */
proto.listenfield.repo.UpsertFarmResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertFarmResult;
  return proto.listenfield.repo.UpsertFarmResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertFarmResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertFarmResult}
 */
proto.listenfield.repo.UpsertFarmResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Farm;
      reader.readMessage(value,repo_catalog$types_pb.Farm.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertFarmResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertFarmResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertFarmResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertFarmResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Farm.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Farm item = 1;
 * @return {?proto.listenfield.repo.catalog.Farm}
 */
proto.listenfield.repo.UpsertFarmResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Farm} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Farm, 1));
};


/** @param {?proto.listenfield.repo.catalog.Farm|undefined} value */
proto.listenfield.repo.UpsertFarmResult.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertFarmResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertFarmResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.QueryFarmResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.listenfield.repo.QueryFarmResult.oneofGroups_);
};
goog.inherits(proto.listenfield.repo.QueryFarmResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.QueryFarmResult.displayName = 'proto.listenfield.repo.QueryFarmResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.listenfield.repo.QueryFarmResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.listenfield.repo.QueryFarmResult.QueryResOneofCase = {
  QUERY_RES_ONEOF_NOT_SET: 0,
  ITEM: 1,
  QUERYMETA: 2
};

/**
 * @return {proto.listenfield.repo.QueryFarmResult.QueryResOneofCase}
 */
proto.listenfield.repo.QueryFarmResult.prototype.getQueryResOneofCase = function() {
  return /** @type {proto.listenfield.repo.QueryFarmResult.QueryResOneofCase} */(jspb.Message.computeOneofCase(this, proto.listenfield.repo.QueryFarmResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.QueryFarmResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.QueryFarmResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.QueryFarmResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryFarmResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Farm.toObject(includeInstance, f),
    querymeta: (f = msg.getQuerymeta()) && api_pb.BatchedQueryMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.QueryFarmResult}
 */
proto.listenfield.repo.QueryFarmResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.QueryFarmResult;
  return proto.listenfield.repo.QueryFarmResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.QueryFarmResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.QueryFarmResult}
 */
proto.listenfield.repo.QueryFarmResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Farm;
      reader.readMessage(value,repo_catalog$types_pb.Farm.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = new api_pb.BatchedQueryMetadata;
      reader.readMessage(value,api_pb.BatchedQueryMetadata.deserializeBinaryFromReader);
      msg.setQuerymeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.QueryFarmResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.QueryFarmResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.QueryFarmResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryFarmResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Farm.serializeBinaryToWriter
    );
  }
  f = message.getQuerymeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_pb.BatchedQueryMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Farm item = 1;
 * @return {?proto.listenfield.repo.catalog.Farm}
 */
proto.listenfield.repo.QueryFarmResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Farm} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Farm, 1));
};


/** @param {?proto.listenfield.repo.catalog.Farm|undefined} value */
proto.listenfield.repo.QueryFarmResult.prototype.setItem = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.listenfield.repo.QueryFarmResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryFarmResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryFarmResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional listenfield.BatchedQueryMetadata queryMeta = 2;
 * @return {?proto.listenfield.BatchedQueryMetadata}
 */
proto.listenfield.repo.QueryFarmResult.prototype.getQuerymeta = function() {
  return /** @type{?proto.listenfield.BatchedQueryMetadata} */ (
    jspb.Message.getWrapperField(this, api_pb.BatchedQueryMetadata, 2));
};


/** @param {?proto.listenfield.BatchedQueryMetadata|undefined} value */
proto.listenfield.repo.QueryFarmResult.prototype.setQuerymeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.listenfield.repo.QueryFarmResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryFarmResult.prototype.clearQuerymeta = function() {
  this.setQuerymeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryFarmResult.prototype.hasQuerymeta = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertGrowerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertGrowerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertGrowerRequest.displayName = 'proto.listenfield.repo.UpsertGrowerRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertGrowerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertGrowerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertGrowerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertGrowerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Grower.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertGrowerRequest}
 */
proto.listenfield.repo.UpsertGrowerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertGrowerRequest;
  return proto.listenfield.repo.UpsertGrowerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertGrowerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertGrowerRequest}
 */
proto.listenfield.repo.UpsertGrowerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Grower;
      reader.readMessage(value,repo_catalog$types_pb.Grower.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertGrowerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertGrowerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertGrowerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertGrowerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Grower.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Grower item = 1;
 * @return {?proto.listenfield.repo.catalog.Grower}
 */
proto.listenfield.repo.UpsertGrowerRequest.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Grower} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Grower, 1));
};


/** @param {?proto.listenfield.repo.catalog.Grower|undefined} value */
proto.listenfield.repo.UpsertGrowerRequest.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertGrowerRequest.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertGrowerRequest.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertGrowerResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertGrowerResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertGrowerResult.displayName = 'proto.listenfield.repo.UpsertGrowerResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertGrowerResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertGrowerResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertGrowerResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertGrowerResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Grower.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertGrowerResult}
 */
proto.listenfield.repo.UpsertGrowerResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertGrowerResult;
  return proto.listenfield.repo.UpsertGrowerResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertGrowerResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertGrowerResult}
 */
proto.listenfield.repo.UpsertGrowerResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Grower;
      reader.readMessage(value,repo_catalog$types_pb.Grower.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertGrowerResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertGrowerResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertGrowerResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertGrowerResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Grower.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Grower item = 1;
 * @return {?proto.listenfield.repo.catalog.Grower}
 */
proto.listenfield.repo.UpsertGrowerResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Grower} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Grower, 1));
};


/** @param {?proto.listenfield.repo.catalog.Grower|undefined} value */
proto.listenfield.repo.UpsertGrowerResult.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertGrowerResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertGrowerResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.QueryGrowerResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.listenfield.repo.QueryGrowerResult.oneofGroups_);
};
goog.inherits(proto.listenfield.repo.QueryGrowerResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.QueryGrowerResult.displayName = 'proto.listenfield.repo.QueryGrowerResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.listenfield.repo.QueryGrowerResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.listenfield.repo.QueryGrowerResult.QueryResOneofCase = {
  QUERY_RES_ONEOF_NOT_SET: 0,
  ITEM: 1,
  QUERYMETA: 2
};

/**
 * @return {proto.listenfield.repo.QueryGrowerResult.QueryResOneofCase}
 */
proto.listenfield.repo.QueryGrowerResult.prototype.getQueryResOneofCase = function() {
  return /** @type {proto.listenfield.repo.QueryGrowerResult.QueryResOneofCase} */(jspb.Message.computeOneofCase(this, proto.listenfield.repo.QueryGrowerResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.QueryGrowerResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.QueryGrowerResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.QueryGrowerResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryGrowerResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Grower.toObject(includeInstance, f),
    querymeta: (f = msg.getQuerymeta()) && api_pb.BatchedQueryMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.QueryGrowerResult}
 */
proto.listenfield.repo.QueryGrowerResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.QueryGrowerResult;
  return proto.listenfield.repo.QueryGrowerResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.QueryGrowerResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.QueryGrowerResult}
 */
proto.listenfield.repo.QueryGrowerResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Grower;
      reader.readMessage(value,repo_catalog$types_pb.Grower.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = new api_pb.BatchedQueryMetadata;
      reader.readMessage(value,api_pb.BatchedQueryMetadata.deserializeBinaryFromReader);
      msg.setQuerymeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.QueryGrowerResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.QueryGrowerResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.QueryGrowerResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryGrowerResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Grower.serializeBinaryToWriter
    );
  }
  f = message.getQuerymeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_pb.BatchedQueryMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Grower item = 1;
 * @return {?proto.listenfield.repo.catalog.Grower}
 */
proto.listenfield.repo.QueryGrowerResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Grower} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Grower, 1));
};


/** @param {?proto.listenfield.repo.catalog.Grower|undefined} value */
proto.listenfield.repo.QueryGrowerResult.prototype.setItem = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.listenfield.repo.QueryGrowerResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryGrowerResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryGrowerResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional listenfield.BatchedQueryMetadata queryMeta = 2;
 * @return {?proto.listenfield.BatchedQueryMetadata}
 */
proto.listenfield.repo.QueryGrowerResult.prototype.getQuerymeta = function() {
  return /** @type{?proto.listenfield.BatchedQueryMetadata} */ (
    jspb.Message.getWrapperField(this, api_pb.BatchedQueryMetadata, 2));
};


/** @param {?proto.listenfield.BatchedQueryMetadata|undefined} value */
proto.listenfield.repo.QueryGrowerResult.prototype.setQuerymeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.listenfield.repo.QueryGrowerResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryGrowerResult.prototype.clearQuerymeta = function() {
  this.setQuerymeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryGrowerResult.prototype.hasQuerymeta = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertCropRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertCropRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertCropRequest.displayName = 'proto.listenfield.repo.UpsertCropRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertCropRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertCropRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertCropRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertCropRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Crop.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertCropRequest}
 */
proto.listenfield.repo.UpsertCropRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertCropRequest;
  return proto.listenfield.repo.UpsertCropRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertCropRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertCropRequest}
 */
proto.listenfield.repo.UpsertCropRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Crop;
      reader.readMessage(value,repo_catalog$types_pb.Crop.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertCropRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertCropRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertCropRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertCropRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Crop.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Crop item = 1;
 * @return {?proto.listenfield.repo.catalog.Crop}
 */
proto.listenfield.repo.UpsertCropRequest.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Crop} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Crop, 1));
};


/** @param {?proto.listenfield.repo.catalog.Crop|undefined} value */
proto.listenfield.repo.UpsertCropRequest.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertCropRequest.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertCropRequest.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertCropResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertCropResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertCropResult.displayName = 'proto.listenfield.repo.UpsertCropResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertCropResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertCropResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertCropResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertCropResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Crop.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertCropResult}
 */
proto.listenfield.repo.UpsertCropResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertCropResult;
  return proto.listenfield.repo.UpsertCropResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertCropResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertCropResult}
 */
proto.listenfield.repo.UpsertCropResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Crop;
      reader.readMessage(value,repo_catalog$types_pb.Crop.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertCropResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertCropResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertCropResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertCropResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Crop.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Crop item = 1;
 * @return {?proto.listenfield.repo.catalog.Crop}
 */
proto.listenfield.repo.UpsertCropResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Crop} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Crop, 1));
};


/** @param {?proto.listenfield.repo.catalog.Crop|undefined} value */
proto.listenfield.repo.UpsertCropResult.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertCropResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertCropResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.QueryCropResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.listenfield.repo.QueryCropResult.oneofGroups_);
};
goog.inherits(proto.listenfield.repo.QueryCropResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.QueryCropResult.displayName = 'proto.listenfield.repo.QueryCropResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.listenfield.repo.QueryCropResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.listenfield.repo.QueryCropResult.QueryResOneofCase = {
  QUERY_RES_ONEOF_NOT_SET: 0,
  ITEM: 1,
  QUERYMETA: 2
};

/**
 * @return {proto.listenfield.repo.QueryCropResult.QueryResOneofCase}
 */
proto.listenfield.repo.QueryCropResult.prototype.getQueryResOneofCase = function() {
  return /** @type {proto.listenfield.repo.QueryCropResult.QueryResOneofCase} */(jspb.Message.computeOneofCase(this, proto.listenfield.repo.QueryCropResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.QueryCropResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.QueryCropResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.QueryCropResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryCropResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Crop.toObject(includeInstance, f),
    querymeta: (f = msg.getQuerymeta()) && api_pb.BatchedQueryMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.QueryCropResult}
 */
proto.listenfield.repo.QueryCropResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.QueryCropResult;
  return proto.listenfield.repo.QueryCropResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.QueryCropResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.QueryCropResult}
 */
proto.listenfield.repo.QueryCropResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Crop;
      reader.readMessage(value,repo_catalog$types_pb.Crop.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = new api_pb.BatchedQueryMetadata;
      reader.readMessage(value,api_pb.BatchedQueryMetadata.deserializeBinaryFromReader);
      msg.setQuerymeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.QueryCropResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.QueryCropResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.QueryCropResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryCropResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Crop.serializeBinaryToWriter
    );
  }
  f = message.getQuerymeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_pb.BatchedQueryMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Crop item = 1;
 * @return {?proto.listenfield.repo.catalog.Crop}
 */
proto.listenfield.repo.QueryCropResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Crop} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Crop, 1));
};


/** @param {?proto.listenfield.repo.catalog.Crop|undefined} value */
proto.listenfield.repo.QueryCropResult.prototype.setItem = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.listenfield.repo.QueryCropResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryCropResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryCropResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional listenfield.BatchedQueryMetadata queryMeta = 2;
 * @return {?proto.listenfield.BatchedQueryMetadata}
 */
proto.listenfield.repo.QueryCropResult.prototype.getQuerymeta = function() {
  return /** @type{?proto.listenfield.BatchedQueryMetadata} */ (
    jspb.Message.getWrapperField(this, api_pb.BatchedQueryMetadata, 2));
};


/** @param {?proto.listenfield.BatchedQueryMetadata|undefined} value */
proto.listenfield.repo.QueryCropResult.prototype.setQuerymeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.listenfield.repo.QueryCropResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryCropResult.prototype.clearQuerymeta = function() {
  this.setQuerymeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryCropResult.prototype.hasQuerymeta = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertCropZoneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertCropZoneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertCropZoneRequest.displayName = 'proto.listenfield.repo.UpsertCropZoneRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertCropZoneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertCropZoneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertCropZoneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertCropZoneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.CropZone.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertCropZoneRequest}
 */
proto.listenfield.repo.UpsertCropZoneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertCropZoneRequest;
  return proto.listenfield.repo.UpsertCropZoneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertCropZoneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertCropZoneRequest}
 */
proto.listenfield.repo.UpsertCropZoneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.CropZone;
      reader.readMessage(value,repo_catalog$types_pb.CropZone.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertCropZoneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertCropZoneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertCropZoneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertCropZoneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.CropZone.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.CropZone item = 1;
 * @return {?proto.listenfield.repo.catalog.CropZone}
 */
proto.listenfield.repo.UpsertCropZoneRequest.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.CropZone} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.CropZone, 1));
};


/** @param {?proto.listenfield.repo.catalog.CropZone|undefined} value */
proto.listenfield.repo.UpsertCropZoneRequest.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertCropZoneRequest.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertCropZoneRequest.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertCropZoneResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertCropZoneResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertCropZoneResult.displayName = 'proto.listenfield.repo.UpsertCropZoneResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertCropZoneResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertCropZoneResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertCropZoneResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertCropZoneResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.CropZone.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertCropZoneResult}
 */
proto.listenfield.repo.UpsertCropZoneResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertCropZoneResult;
  return proto.listenfield.repo.UpsertCropZoneResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertCropZoneResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertCropZoneResult}
 */
proto.listenfield.repo.UpsertCropZoneResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.CropZone;
      reader.readMessage(value,repo_catalog$types_pb.CropZone.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertCropZoneResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertCropZoneResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertCropZoneResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertCropZoneResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.CropZone.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.CropZone item = 1;
 * @return {?proto.listenfield.repo.catalog.CropZone}
 */
proto.listenfield.repo.UpsertCropZoneResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.CropZone} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.CropZone, 1));
};


/** @param {?proto.listenfield.repo.catalog.CropZone|undefined} value */
proto.listenfield.repo.UpsertCropZoneResult.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertCropZoneResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertCropZoneResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.QueryCropZoneResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.listenfield.repo.QueryCropZoneResult.oneofGroups_);
};
goog.inherits(proto.listenfield.repo.QueryCropZoneResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.QueryCropZoneResult.displayName = 'proto.listenfield.repo.QueryCropZoneResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.listenfield.repo.QueryCropZoneResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.listenfield.repo.QueryCropZoneResult.QueryResOneofCase = {
  QUERY_RES_ONEOF_NOT_SET: 0,
  ITEM: 1,
  QUERYMETA: 2
};

/**
 * @return {proto.listenfield.repo.QueryCropZoneResult.QueryResOneofCase}
 */
proto.listenfield.repo.QueryCropZoneResult.prototype.getQueryResOneofCase = function() {
  return /** @type {proto.listenfield.repo.QueryCropZoneResult.QueryResOneofCase} */(jspb.Message.computeOneofCase(this, proto.listenfield.repo.QueryCropZoneResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.QueryCropZoneResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.QueryCropZoneResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.QueryCropZoneResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryCropZoneResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.CropZone.toObject(includeInstance, f),
    querymeta: (f = msg.getQuerymeta()) && api_pb.BatchedQueryMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.QueryCropZoneResult}
 */
proto.listenfield.repo.QueryCropZoneResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.QueryCropZoneResult;
  return proto.listenfield.repo.QueryCropZoneResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.QueryCropZoneResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.QueryCropZoneResult}
 */
proto.listenfield.repo.QueryCropZoneResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.CropZone;
      reader.readMessage(value,repo_catalog$types_pb.CropZone.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = new api_pb.BatchedQueryMetadata;
      reader.readMessage(value,api_pb.BatchedQueryMetadata.deserializeBinaryFromReader);
      msg.setQuerymeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.QueryCropZoneResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.QueryCropZoneResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.QueryCropZoneResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryCropZoneResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.CropZone.serializeBinaryToWriter
    );
  }
  f = message.getQuerymeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_pb.BatchedQueryMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.CropZone item = 1;
 * @return {?proto.listenfield.repo.catalog.CropZone}
 */
proto.listenfield.repo.QueryCropZoneResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.CropZone} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.CropZone, 1));
};


/** @param {?proto.listenfield.repo.catalog.CropZone|undefined} value */
proto.listenfield.repo.QueryCropZoneResult.prototype.setItem = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.listenfield.repo.QueryCropZoneResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryCropZoneResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryCropZoneResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional listenfield.BatchedQueryMetadata queryMeta = 2;
 * @return {?proto.listenfield.BatchedQueryMetadata}
 */
proto.listenfield.repo.QueryCropZoneResult.prototype.getQuerymeta = function() {
  return /** @type{?proto.listenfield.BatchedQueryMetadata} */ (
    jspb.Message.getWrapperField(this, api_pb.BatchedQueryMetadata, 2));
};


/** @param {?proto.listenfield.BatchedQueryMetadata|undefined} value */
proto.listenfield.repo.QueryCropZoneResult.prototype.setQuerymeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.listenfield.repo.QueryCropZoneResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryCropZoneResult.prototype.clearQuerymeta = function() {
  this.setQuerymeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryCropZoneResult.prototype.hasQuerymeta = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertContactInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertContactInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertContactInfoRequest.displayName = 'proto.listenfield.repo.UpsertContactInfoRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertContactInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertContactInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertContactInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertContactInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.ContactInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertContactInfoRequest}
 */
proto.listenfield.repo.UpsertContactInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertContactInfoRequest;
  return proto.listenfield.repo.UpsertContactInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertContactInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertContactInfoRequest}
 */
proto.listenfield.repo.UpsertContactInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.ContactInfo;
      reader.readMessage(value,repo_catalog$types_pb.ContactInfo.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertContactInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertContactInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertContactInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertContactInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.ContactInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.ContactInfo item = 1;
 * @return {?proto.listenfield.repo.catalog.ContactInfo}
 */
proto.listenfield.repo.UpsertContactInfoRequest.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.ContactInfo} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.ContactInfo, 1));
};


/** @param {?proto.listenfield.repo.catalog.ContactInfo|undefined} value */
proto.listenfield.repo.UpsertContactInfoRequest.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertContactInfoRequest.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertContactInfoRequest.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertContactInfoResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertContactInfoResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertContactInfoResult.displayName = 'proto.listenfield.repo.UpsertContactInfoResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertContactInfoResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertContactInfoResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertContactInfoResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertContactInfoResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.ContactInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertContactInfoResult}
 */
proto.listenfield.repo.UpsertContactInfoResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertContactInfoResult;
  return proto.listenfield.repo.UpsertContactInfoResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertContactInfoResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertContactInfoResult}
 */
proto.listenfield.repo.UpsertContactInfoResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.ContactInfo;
      reader.readMessage(value,repo_catalog$types_pb.ContactInfo.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertContactInfoResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertContactInfoResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertContactInfoResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertContactInfoResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.ContactInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.ContactInfo item = 1;
 * @return {?proto.listenfield.repo.catalog.ContactInfo}
 */
proto.listenfield.repo.UpsertContactInfoResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.ContactInfo} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.ContactInfo, 1));
};


/** @param {?proto.listenfield.repo.catalog.ContactInfo|undefined} value */
proto.listenfield.repo.UpsertContactInfoResult.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertContactInfoResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertContactInfoResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.QueryContactInfoResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.listenfield.repo.QueryContactInfoResult.oneofGroups_);
};
goog.inherits(proto.listenfield.repo.QueryContactInfoResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.QueryContactInfoResult.displayName = 'proto.listenfield.repo.QueryContactInfoResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.listenfield.repo.QueryContactInfoResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.listenfield.repo.QueryContactInfoResult.QueryResOneofCase = {
  QUERY_RES_ONEOF_NOT_SET: 0,
  ITEM: 1,
  QUERYMETA: 2
};

/**
 * @return {proto.listenfield.repo.QueryContactInfoResult.QueryResOneofCase}
 */
proto.listenfield.repo.QueryContactInfoResult.prototype.getQueryResOneofCase = function() {
  return /** @type {proto.listenfield.repo.QueryContactInfoResult.QueryResOneofCase} */(jspb.Message.computeOneofCase(this, proto.listenfield.repo.QueryContactInfoResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.QueryContactInfoResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.QueryContactInfoResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.QueryContactInfoResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryContactInfoResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.ContactInfo.toObject(includeInstance, f),
    querymeta: (f = msg.getQuerymeta()) && api_pb.BatchedQueryMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.QueryContactInfoResult}
 */
proto.listenfield.repo.QueryContactInfoResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.QueryContactInfoResult;
  return proto.listenfield.repo.QueryContactInfoResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.QueryContactInfoResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.QueryContactInfoResult}
 */
proto.listenfield.repo.QueryContactInfoResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.ContactInfo;
      reader.readMessage(value,repo_catalog$types_pb.ContactInfo.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = new api_pb.BatchedQueryMetadata;
      reader.readMessage(value,api_pb.BatchedQueryMetadata.deserializeBinaryFromReader);
      msg.setQuerymeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.QueryContactInfoResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.QueryContactInfoResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.QueryContactInfoResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryContactInfoResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.ContactInfo.serializeBinaryToWriter
    );
  }
  f = message.getQuerymeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_pb.BatchedQueryMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.ContactInfo item = 1;
 * @return {?proto.listenfield.repo.catalog.ContactInfo}
 */
proto.listenfield.repo.QueryContactInfoResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.ContactInfo} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.ContactInfo, 1));
};


/** @param {?proto.listenfield.repo.catalog.ContactInfo|undefined} value */
proto.listenfield.repo.QueryContactInfoResult.prototype.setItem = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.listenfield.repo.QueryContactInfoResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryContactInfoResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryContactInfoResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional listenfield.BatchedQueryMetadata queryMeta = 2;
 * @return {?proto.listenfield.BatchedQueryMetadata}
 */
proto.listenfield.repo.QueryContactInfoResult.prototype.getQuerymeta = function() {
  return /** @type{?proto.listenfield.BatchedQueryMetadata} */ (
    jspb.Message.getWrapperField(this, api_pb.BatchedQueryMetadata, 2));
};


/** @param {?proto.listenfield.BatchedQueryMetadata|undefined} value */
proto.listenfield.repo.QueryContactInfoResult.prototype.setQuerymeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.listenfield.repo.QueryContactInfoResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryContactInfoResult.prototype.clearQuerymeta = function() {
  this.setQuerymeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryContactInfoResult.prototype.hasQuerymeta = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertPersonRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertPersonRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertPersonRequest.displayName = 'proto.listenfield.repo.UpsertPersonRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertPersonRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertPersonRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertPersonRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertPersonRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Person.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertPersonRequest}
 */
proto.listenfield.repo.UpsertPersonRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertPersonRequest;
  return proto.listenfield.repo.UpsertPersonRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertPersonRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertPersonRequest}
 */
proto.listenfield.repo.UpsertPersonRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Person;
      reader.readMessage(value,repo_catalog$types_pb.Person.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertPersonRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertPersonRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertPersonRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertPersonRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Person.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Person item = 1;
 * @return {?proto.listenfield.repo.catalog.Person}
 */
proto.listenfield.repo.UpsertPersonRequest.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Person} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Person, 1));
};


/** @param {?proto.listenfield.repo.catalog.Person|undefined} value */
proto.listenfield.repo.UpsertPersonRequest.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertPersonRequest.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertPersonRequest.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertPersonResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertPersonResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertPersonResult.displayName = 'proto.listenfield.repo.UpsertPersonResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertPersonResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertPersonResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertPersonResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertPersonResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Person.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertPersonResult}
 */
proto.listenfield.repo.UpsertPersonResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertPersonResult;
  return proto.listenfield.repo.UpsertPersonResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertPersonResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertPersonResult}
 */
proto.listenfield.repo.UpsertPersonResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Person;
      reader.readMessage(value,repo_catalog$types_pb.Person.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertPersonResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertPersonResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertPersonResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertPersonResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Person.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Person item = 1;
 * @return {?proto.listenfield.repo.catalog.Person}
 */
proto.listenfield.repo.UpsertPersonResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Person} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Person, 1));
};


/** @param {?proto.listenfield.repo.catalog.Person|undefined} value */
proto.listenfield.repo.UpsertPersonResult.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertPersonResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertPersonResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.QueryPersonResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.listenfield.repo.QueryPersonResult.oneofGroups_);
};
goog.inherits(proto.listenfield.repo.QueryPersonResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.QueryPersonResult.displayName = 'proto.listenfield.repo.QueryPersonResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.listenfield.repo.QueryPersonResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.listenfield.repo.QueryPersonResult.QueryResOneofCase = {
  QUERY_RES_ONEOF_NOT_SET: 0,
  ITEM: 1,
  QUERYMETA: 2
};

/**
 * @return {proto.listenfield.repo.QueryPersonResult.QueryResOneofCase}
 */
proto.listenfield.repo.QueryPersonResult.prototype.getQueryResOneofCase = function() {
  return /** @type {proto.listenfield.repo.QueryPersonResult.QueryResOneofCase} */(jspb.Message.computeOneofCase(this, proto.listenfield.repo.QueryPersonResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.QueryPersonResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.QueryPersonResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.QueryPersonResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryPersonResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Person.toObject(includeInstance, f),
    querymeta: (f = msg.getQuerymeta()) && api_pb.BatchedQueryMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.QueryPersonResult}
 */
proto.listenfield.repo.QueryPersonResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.QueryPersonResult;
  return proto.listenfield.repo.QueryPersonResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.QueryPersonResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.QueryPersonResult}
 */
proto.listenfield.repo.QueryPersonResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Person;
      reader.readMessage(value,repo_catalog$types_pb.Person.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = new api_pb.BatchedQueryMetadata;
      reader.readMessage(value,api_pb.BatchedQueryMetadata.deserializeBinaryFromReader);
      msg.setQuerymeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.QueryPersonResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.QueryPersonResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.QueryPersonResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryPersonResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Person.serializeBinaryToWriter
    );
  }
  f = message.getQuerymeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_pb.BatchedQueryMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Person item = 1;
 * @return {?proto.listenfield.repo.catalog.Person}
 */
proto.listenfield.repo.QueryPersonResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Person} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Person, 1));
};


/** @param {?proto.listenfield.repo.catalog.Person|undefined} value */
proto.listenfield.repo.QueryPersonResult.prototype.setItem = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.listenfield.repo.QueryPersonResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryPersonResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryPersonResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional listenfield.BatchedQueryMetadata queryMeta = 2;
 * @return {?proto.listenfield.BatchedQueryMetadata}
 */
proto.listenfield.repo.QueryPersonResult.prototype.getQuerymeta = function() {
  return /** @type{?proto.listenfield.BatchedQueryMetadata} */ (
    jspb.Message.getWrapperField(this, api_pb.BatchedQueryMetadata, 2));
};


/** @param {?proto.listenfield.BatchedQueryMetadata|undefined} value */
proto.listenfield.repo.QueryPersonResult.prototype.setQuerymeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.listenfield.repo.QueryPersonResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryPersonResult.prototype.clearQuerymeta = function() {
  this.setQuerymeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryPersonResult.prototype.hasQuerymeta = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertPersonRoleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertPersonRoleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertPersonRoleRequest.displayName = 'proto.listenfield.repo.UpsertPersonRoleRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertPersonRoleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertPersonRoleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertPersonRoleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertPersonRoleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.PersonRole.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertPersonRoleRequest}
 */
proto.listenfield.repo.UpsertPersonRoleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertPersonRoleRequest;
  return proto.listenfield.repo.UpsertPersonRoleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertPersonRoleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertPersonRoleRequest}
 */
proto.listenfield.repo.UpsertPersonRoleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.PersonRole;
      reader.readMessage(value,repo_catalog$types_pb.PersonRole.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertPersonRoleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertPersonRoleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertPersonRoleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertPersonRoleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.PersonRole.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.PersonRole item = 1;
 * @return {?proto.listenfield.repo.catalog.PersonRole}
 */
proto.listenfield.repo.UpsertPersonRoleRequest.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.PersonRole} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.PersonRole, 1));
};


/** @param {?proto.listenfield.repo.catalog.PersonRole|undefined} value */
proto.listenfield.repo.UpsertPersonRoleRequest.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertPersonRoleRequest.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertPersonRoleRequest.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertPersonRoleResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertPersonRoleResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertPersonRoleResult.displayName = 'proto.listenfield.repo.UpsertPersonRoleResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertPersonRoleResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertPersonRoleResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertPersonRoleResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertPersonRoleResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.PersonRole.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertPersonRoleResult}
 */
proto.listenfield.repo.UpsertPersonRoleResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertPersonRoleResult;
  return proto.listenfield.repo.UpsertPersonRoleResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertPersonRoleResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertPersonRoleResult}
 */
proto.listenfield.repo.UpsertPersonRoleResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.PersonRole;
      reader.readMessage(value,repo_catalog$types_pb.PersonRole.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertPersonRoleResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertPersonRoleResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertPersonRoleResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertPersonRoleResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.PersonRole.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.PersonRole item = 1;
 * @return {?proto.listenfield.repo.catalog.PersonRole}
 */
proto.listenfield.repo.UpsertPersonRoleResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.PersonRole} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.PersonRole, 1));
};


/** @param {?proto.listenfield.repo.catalog.PersonRole|undefined} value */
proto.listenfield.repo.UpsertPersonRoleResult.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertPersonRoleResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertPersonRoleResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.QueryPersonRoleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.QueryPersonRoleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.QueryPersonRoleRequest.displayName = 'proto.listenfield.repo.QueryPersonRoleRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.QueryPersonRoleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.QueryPersonRoleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryPersonRoleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    personid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    growerid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    role: jspb.Message.getFieldWithDefault(msg, 6, 0),
    companyid: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.QueryPersonRoleRequest}
 */
proto.listenfield.repo.QueryPersonRoleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.QueryPersonRoleRequest;
  return proto.listenfield.repo.QueryPersonRoleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.QueryPersonRoleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.QueryPersonRoleRequest}
 */
proto.listenfield.repo.QueryPersonRoleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGrowerid(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 6:
      var value = /** @type {!proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.Value} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.QueryPersonRoleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.QueryPersonRoleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryPersonRoleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPersonid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGrowerid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getCompanyid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional uint32 page_size = 1;
 * @return {number}
 */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.setPageSize = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.setPageToken = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string PersonId = 3;
 * @return {string}
 */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.getPersonid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.setPersonid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string GrowerId = 4;
 * @return {string}
 */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.getGrowerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.setGrowerid = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp TimeStamp = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.setTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.listenfield.repo.QueryPersonRoleRequest.prototype.clearTimestamp = function() {
  this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional catalog.PersonRole.PersonRolesEnum.Value Role = 6;
 * @return {!proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.Value}
 */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.getRole = function() {
  return /** @type {!proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.Value} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.listenfield.repo.catalog.PersonRole.PersonRolesEnum.Value} value */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.setRole = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string CompanyId = 7;
 * @return {string}
 */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.getCompanyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.listenfield.repo.QueryPersonRoleRequest.prototype.setCompanyid = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.QueryPersonRoleResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.listenfield.repo.QueryPersonRoleResult.oneofGroups_);
};
goog.inherits(proto.listenfield.repo.QueryPersonRoleResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.QueryPersonRoleResult.displayName = 'proto.listenfield.repo.QueryPersonRoleResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.listenfield.repo.QueryPersonRoleResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.listenfield.repo.QueryPersonRoleResult.QueryResOneofCase = {
  QUERY_RES_ONEOF_NOT_SET: 0,
  ITEM: 1,
  QUERYMETA: 2
};

/**
 * @return {proto.listenfield.repo.QueryPersonRoleResult.QueryResOneofCase}
 */
proto.listenfield.repo.QueryPersonRoleResult.prototype.getQueryResOneofCase = function() {
  return /** @type {proto.listenfield.repo.QueryPersonRoleResult.QueryResOneofCase} */(jspb.Message.computeOneofCase(this, proto.listenfield.repo.QueryPersonRoleResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.QueryPersonRoleResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.QueryPersonRoleResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.QueryPersonRoleResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryPersonRoleResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.PersonRole.toObject(includeInstance, f),
    querymeta: (f = msg.getQuerymeta()) && api_pb.BatchedQueryMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.QueryPersonRoleResult}
 */
proto.listenfield.repo.QueryPersonRoleResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.QueryPersonRoleResult;
  return proto.listenfield.repo.QueryPersonRoleResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.QueryPersonRoleResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.QueryPersonRoleResult}
 */
proto.listenfield.repo.QueryPersonRoleResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.PersonRole;
      reader.readMessage(value,repo_catalog$types_pb.PersonRole.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = new api_pb.BatchedQueryMetadata;
      reader.readMessage(value,api_pb.BatchedQueryMetadata.deserializeBinaryFromReader);
      msg.setQuerymeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.QueryPersonRoleResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.QueryPersonRoleResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.QueryPersonRoleResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryPersonRoleResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.PersonRole.serializeBinaryToWriter
    );
  }
  f = message.getQuerymeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_pb.BatchedQueryMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.PersonRole item = 1;
 * @return {?proto.listenfield.repo.catalog.PersonRole}
 */
proto.listenfield.repo.QueryPersonRoleResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.PersonRole} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.PersonRole, 1));
};


/** @param {?proto.listenfield.repo.catalog.PersonRole|undefined} value */
proto.listenfield.repo.QueryPersonRoleResult.prototype.setItem = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.listenfield.repo.QueryPersonRoleResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryPersonRoleResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryPersonRoleResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional listenfield.BatchedQueryMetadata queryMeta = 2;
 * @return {?proto.listenfield.BatchedQueryMetadata}
 */
proto.listenfield.repo.QueryPersonRoleResult.prototype.getQuerymeta = function() {
  return /** @type{?proto.listenfield.BatchedQueryMetadata} */ (
    jspb.Message.getWrapperField(this, api_pb.BatchedQueryMetadata, 2));
};


/** @param {?proto.listenfield.BatchedQueryMetadata|undefined} value */
proto.listenfield.repo.QueryPersonRoleResult.prototype.setQuerymeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.listenfield.repo.QueryPersonRoleResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryPersonRoleResult.prototype.clearQuerymeta = function() {
  this.setQuerymeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryPersonRoleResult.prototype.hasQuerymeta = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertCompanyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertCompanyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertCompanyRequest.displayName = 'proto.listenfield.repo.UpsertCompanyRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertCompanyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertCompanyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertCompanyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertCompanyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Company.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertCompanyRequest}
 */
proto.listenfield.repo.UpsertCompanyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertCompanyRequest;
  return proto.listenfield.repo.UpsertCompanyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertCompanyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertCompanyRequest}
 */
proto.listenfield.repo.UpsertCompanyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Company;
      reader.readMessage(value,repo_catalog$types_pb.Company.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertCompanyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertCompanyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertCompanyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertCompanyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Company.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Company item = 1;
 * @return {?proto.listenfield.repo.catalog.Company}
 */
proto.listenfield.repo.UpsertCompanyRequest.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Company} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Company, 1));
};


/** @param {?proto.listenfield.repo.catalog.Company|undefined} value */
proto.listenfield.repo.UpsertCompanyRequest.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertCompanyRequest.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertCompanyRequest.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.UpsertCompanyResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.listenfield.repo.UpsertCompanyResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.UpsertCompanyResult.displayName = 'proto.listenfield.repo.UpsertCompanyResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.UpsertCompanyResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.UpsertCompanyResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.UpsertCompanyResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertCompanyResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Company.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.UpsertCompanyResult}
 */
proto.listenfield.repo.UpsertCompanyResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.UpsertCompanyResult;
  return proto.listenfield.repo.UpsertCompanyResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.UpsertCompanyResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.UpsertCompanyResult}
 */
proto.listenfield.repo.UpsertCompanyResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Company;
      reader.readMessage(value,repo_catalog$types_pb.Company.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.UpsertCompanyResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.UpsertCompanyResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.UpsertCompanyResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.UpsertCompanyResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Company.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Company item = 1;
 * @return {?proto.listenfield.repo.catalog.Company}
 */
proto.listenfield.repo.UpsertCompanyResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Company} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Company, 1));
};


/** @param {?proto.listenfield.repo.catalog.Company|undefined} value */
proto.listenfield.repo.UpsertCompanyResult.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.listenfield.repo.UpsertCompanyResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.UpsertCompanyResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.listenfield.repo.QueryCompanyResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.listenfield.repo.QueryCompanyResult.oneofGroups_);
};
goog.inherits(proto.listenfield.repo.QueryCompanyResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.listenfield.repo.QueryCompanyResult.displayName = 'proto.listenfield.repo.QueryCompanyResult';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.listenfield.repo.QueryCompanyResult.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.listenfield.repo.QueryCompanyResult.QueryResOneofCase = {
  QUERY_RES_ONEOF_NOT_SET: 0,
  ITEM: 1,
  QUERYMETA: 2
};

/**
 * @return {proto.listenfield.repo.QueryCompanyResult.QueryResOneofCase}
 */
proto.listenfield.repo.QueryCompanyResult.prototype.getQueryResOneofCase = function() {
  return /** @type {proto.listenfield.repo.QueryCompanyResult.QueryResOneofCase} */(jspb.Message.computeOneofCase(this, proto.listenfield.repo.QueryCompanyResult.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.listenfield.repo.QueryCompanyResult.prototype.toObject = function(opt_includeInstance) {
  return proto.listenfield.repo.QueryCompanyResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.listenfield.repo.QueryCompanyResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryCompanyResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && repo_catalog$types_pb.Company.toObject(includeInstance, f),
    querymeta: (f = msg.getQuerymeta()) && api_pb.BatchedQueryMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.listenfield.repo.QueryCompanyResult}
 */
proto.listenfield.repo.QueryCompanyResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.listenfield.repo.QueryCompanyResult;
  return proto.listenfield.repo.QueryCompanyResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.listenfield.repo.QueryCompanyResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.listenfield.repo.QueryCompanyResult}
 */
proto.listenfield.repo.QueryCompanyResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new repo_catalog$types_pb.Company;
      reader.readMessage(value,repo_catalog$types_pb.Company.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = new api_pb.BatchedQueryMetadata;
      reader.readMessage(value,api_pb.BatchedQueryMetadata.deserializeBinaryFromReader);
      msg.setQuerymeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.listenfield.repo.QueryCompanyResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.listenfield.repo.QueryCompanyResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.listenfield.repo.QueryCompanyResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.listenfield.repo.QueryCompanyResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      repo_catalog$types_pb.Company.serializeBinaryToWriter
    );
  }
  f = message.getQuerymeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_pb.BatchedQueryMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional catalog.Company item = 1;
 * @return {?proto.listenfield.repo.catalog.Company}
 */
proto.listenfield.repo.QueryCompanyResult.prototype.getItem = function() {
  return /** @type{?proto.listenfield.repo.catalog.Company} */ (
    jspb.Message.getWrapperField(this, repo_catalog$types_pb.Company, 1));
};


/** @param {?proto.listenfield.repo.catalog.Company|undefined} value */
proto.listenfield.repo.QueryCompanyResult.prototype.setItem = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.listenfield.repo.QueryCompanyResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryCompanyResult.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryCompanyResult.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional listenfield.BatchedQueryMetadata queryMeta = 2;
 * @return {?proto.listenfield.BatchedQueryMetadata}
 */
proto.listenfield.repo.QueryCompanyResult.prototype.getQuerymeta = function() {
  return /** @type{?proto.listenfield.BatchedQueryMetadata} */ (
    jspb.Message.getWrapperField(this, api_pb.BatchedQueryMetadata, 2));
};


/** @param {?proto.listenfield.BatchedQueryMetadata|undefined} value */
proto.listenfield.repo.QueryCompanyResult.prototype.setQuerymeta = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.listenfield.repo.QueryCompanyResult.oneofGroups_[0], value);
};


proto.listenfield.repo.QueryCompanyResult.prototype.clearQuerymeta = function() {
  this.setQuerymeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.listenfield.repo.QueryCompanyResult.prototype.hasQuerymeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.listenfield.repo);
